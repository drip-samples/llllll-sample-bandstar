{"version":3,"sources":["assets/img/animal_music_band_singer.png","assets/img/animal_music_band_guitar.png","assets/img/animal_music_band_bass.png","assets/img/animal_music_band_drum.png","assets/img/music_keyboard_woman.png","assets/img/music_djembe_janbe_jambe_woman.png","assets/img/dtm_musician.png","assets/img/musician_violin_usagi.png","assets/img/sax_musician.png","assets/img/animal_music_band.png","assets/img/poweredby6p.png","contexts/Web3Context/index.js","enums/Web3StatusType.js","enums/Web3TransactionType.js","enums/ContractData.js","providers/Web3Provider/index.js","providers/GithubPagesRedirectProvider/index.js","enums/NetworkId.js","enums/TokenType.js","enums/GenreType.js","models/TokenModel/index.js","components/TokenIcon/index.js","components/TokenTypeChip/index.js","components/GenreTypeChip/index.js","components/Loading/index.js","views/TokenDetail/index.js","components/MetamaskDisableNetwork/index.js","components/MetamaskNotFound/index.js","injectors/ValidateWeb3Injector/index.js","enums/NetworkName.js","components/NewChip/index.js","components/TokenCard/index.js","views/MyPage/index.js","injectors/Web3Injector/index.js","components/Header/index.js","components/Footer/index.js","components/NotFound/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Web3Context","React","createContext","Web3StatusType","identity","Symbol","checking","waiting","failed","notfound","network","success","Web3TransactionType","none","pending","cancel","SixPillars","require","BandStar","ContractData","abi","addresses","3","4","42","5777","Web3Provider","state","web3","web3Status","networkId","currentAddress","web3Transaction","mintToken","mintData","inscription","_this$state","_this","sixPillarsAddress","utils","sha3","substr","slice","sendingCallback","arguments","length","undefined","setState","_this$state2","eth","sendTransaction","from","to","data","on","transactionHash","receipt","err","_this2","this","window","addEventListener","_ref","type","Web3","ethereum","postMessage","currentProvider","prevProps","prevState","_this3","_this$state3","getAccounts","then","res","address","net","getId","Error","Object","keys","indexOf","toString","catch","console","log","react_default","a","createElement","contexts_Web3Context","Provider","value","Children","only","props","children","Component","GithubPagesRedirectProvider","pathName","sessionStorage","redirect","splitPathName","split","history","push","cloneElement","objectSpread","withRouter","NetworkId","ropsten","reqinkeby","kovan","local","TokenType","vocal","guitar","bass","drum","keyboard","jambe","dtm","violin","sax","band","GenreType","alternativeRock","bigBeat","digitalHardcore","electro","folk","funk","ukGarage","gothicRock","hardRock","heavyMetal","instrumental","jazz","noise","pops","progressiveRock","ska","symphonicMetal","TokenModel","classCallCheck","id","owner","creator","tokenType","genreType","skill","passion","looks","mental","childTokenTypes","sales","fun","act","isAlreadyDisplay","isAlreadyMixed","index","max","mul","Math","floor","random","i","byteForInscription","targetKey","filter","key","concat","localStorage","setItem","isAlreadyDisplayKey","isAlreadyMixedKey","tokenId","toLowerCase","getItem","model","byte","parseInt","values","childCount","decodeTokenTypeByBandStar","decodeTokenTypeByOther","decodeForBand","decodeForMember","enableTokenTypes","enableGenreTypes","tokenModels","map","reduce","next","current","uniqueGenres","self","genreBonus","pow","TokenIcon","src","_this$props","tokenModel","remainProps","objectWithoutProperties","imageVocal","imageGuitar","imageBass","imageDrum","imageKeyboard","imageJambe","imageDtm","imageViolin","imageSax","imageBand","assign","alt","TokenTypeChip","label","Chip_default","color","GenreTypeChip","Loading","CircularProgress_default","size","NumericGauge","labelName","LinearProgress_default","variant","round","style","display","verticalAlign","width","TokenDetail","isNotFound","salesFormatter","Intl","NumberFormat","currency","funFormatter","actFormat","day","monthNum","month","dayNum","yearNum","year","web3HttpUrl","name","handleOtherDappsClick","open","location","pathname","_this$props$match$par","match","params","networkName","providers","HttpProvider","sixPillars","Contract","Number","isNaN","methods","ownerOf","call","result","BN","decode","Fragment","components_TokenIcon","height","components_TokenTypeChip","components_GenreTypeChip","fontSize","fontWeight","format","marginTop","Button_default","onClick","MetamaskDisableNetwork","MetamaskNotFound","ValidateWeb3Injector","WrappedComponent","_React$Component","_class","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","Consumer","providerProps","NetworkName","NewChip","red","backgroundColor","TokenCard","handleClick","_this$props2","isMixedMode","isSelected","cardStyle","teal","grey","Card_default","CardActionArea_default","CardContent_default","float","marginBottom","maxWidth","maxHeight","listStyle","CheckBox_default","CheckBoxOutlineBlank_default","LIST_ITEM_ONCE","MyPage","tokenBalance","isLoadingNextToken","isCanMore","selectedTokenIds","updateTokenId","nextIndex","remainCount","tokenOfOwnerByIndex","bn","error","handleMintClick","mint","encode","handleTokenClick","handleMoreClick","handleEditMixedClick","handleSubmitMixedClick","mixedTokenModels","mixedMint","forEach","alreadyMixed","balanceOf","balance","_this$state4","displayCount","Grid_default","container","item","xs","md","lg","Array","fill","_","components_TokenCard","padding","Web3Injector","Header","isProgress","isOpen","snackMessage","handleSnackClose","handleLogoClick","setTimeout","reload","AppBar_default","position","Toolbar_default","Typography_default","flexGrow","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","FOOTER_HEIGHT","Footer","handleChange","event","rootStyle","bottom","justifyContent","alignItems","textAlign","href","target","rel","logo","className","NotFound","App","providers_Web3Provider","BrowserRouter","basename","providers_GithubPagesRedirectProvider","components_Header","paddingBottom","Switch","Route","exact","path","component","components_Footer","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,ok71BCIzBC,EAFKC,IAAMC,gBCFXC,EAAA,CACbC,SAAUC,OAAO,YACjBC,SAAUD,OAAO,YACjBE,QAASF,OAAO,WAChBG,OAAQ,CACNC,SAAUJ,OAAO,mBACjBK,QAASL,OAAO,mBAElBM,QAASN,OAAO,YCRHO,EAAA,CACbC,KAAMR,OAAO,QACbS,QAAST,OAAO,WAChBM,QAASN,OAAO,WAChBU,OAAQV,OAAO,WCJXW,EAAaC,EAAQ,KACrBC,EAAWD,EAAQ,KAEVE,EAAA,CACbH,WAAY,CACVI,IAAKJ,EAAU,IACfK,UAAW,CACTC,EAAG,6CACHC,EAAG,6CACHC,GAAI,6CACJC,KAAMT,EAAU,SAAa,MAAvB,UAGVE,SAAU,CACRE,IAAKF,EAAQ,IACbG,UAAW,CACTC,EAAG,6CACHC,EAAG,6CACHC,GAAI,6CACJC,KAAMP,EAAQ,SAAa,MAArB,WC0GGQ,6MArHbC,MAAQ,CACNC,KAAM,KACNC,WAAY1B,EAAeC,SAC3B0B,UAAW,KACXC,eAAgB,KAChBC,gBAAiBpB,EAAoBC,KACrCoB,UAAW,QAGbC,SAAW,SAACC,GAAgB,IAAAC,EACEC,EAAKV,MAAzBC,EADkBQ,EAClBR,KAAME,EADYM,EACZN,UACRQ,EAAoBnB,EAAaH,WAAWK,UAAUS,GAK5D,OAJmBF,EAAKW,MAAMC,KAAK,yBAAyBC,OAAO,EAAG,IACjDN,EAAYO,OAAO,KACZ,mEAAqEJ,EAAkBG,OAAO,EAAG,KAAKC,OAAO,OAK3IT,UAAY,SAACE,GAAwC,IAA3BQ,EAA2BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KAC1CP,EAAKU,SAAS,CAACf,gBAAiBpB,EAAoBC,OADD,IAAAmC,EAETX,EAAKV,MAAxCC,EAF4CoB,EAE5CpB,KAAME,EAFsCkB,EAEtClB,UAAWC,EAF2BiB,EAE3BjB,eACxBH,EAAKqB,IAAIC,gBAAgB,CACvBC,KAAMpB,EACNqB,GAAIjC,EAAaD,SAASG,UAAUS,GACpCuB,KAAMhB,EAAKH,SAASC,KAEnBmB,GAAG,kBAAmB,SAACC,GACtBlB,EAAKU,SAAS,CAACf,gBAAiBpB,EAAoBE,UACpD6B,GAAmBA,MAEpBW,GAAG,UAAW,SAACE,GACdnB,EAAKU,SAAS,CAACf,gBAAiBpB,EAAoBD,YAErD2C,GAAG,QAAS,SAACG,GACZpB,EAAKU,SAAS,CAACf,gBAAiBpB,EAAoBG,+FAItC,IAAA2C,EAAAC,KAClB,GAA2B,qBAAhBC,OAAOhC,KAChBgC,OAAOC,iBAAiB,UAAW,SAAAC,GAAc,IAAXT,EAAWS,EAAXT,KACpC,GAAIA,GAAQA,EAAKU,MAAsB,8BAAdV,EAAKU,KAAsC,CAClE,IAAMnC,EAAO,IAAIoC,IAAKJ,OAAOK,UAC7BP,EAAKX,SAAS,CACZnB,OACAC,WAAYD,EAAOzB,EAAeG,SAAWH,EAAeK,OAAOC,cAIzEmD,OAAOM,YAAY,CAAEH,KAAM,6BAA+B,SAErD,CACL,IAAMnC,EAAO,IAAIoC,IAAKJ,OAAOhC,KAAKuC,iBAClCR,KAAKZ,SAAS,CACZnB,OACAC,WAAYD,EAAOzB,EAAeG,SAAWH,EAAeK,OAAOC,uDAKtD2D,EAAWC,GAAW,IAAAC,EAAAX,KAAAY,EACVZ,KAAKhC,MAA1BC,EAD+B2C,EAC/B3C,KAAMC,EADyB0C,EACzB1C,WACRI,EAAY0B,KAAK1B,UACvB,OAAQJ,GACN,KAAK1B,EAAeG,SAClBqD,KAAKZ,SAAS,CACZlB,WAAY1B,EAAeI,UAE7BqB,EAAKqB,IAAIuB,cACNC,KAAK,SAACC,GACL,IAAMC,EAAUD,GAAO,EAAIA,EAAI7B,QAAU6B,EAAI,GAC7C,GAAIC,EAIF,OAHAL,EAAKvB,SAAS,CACZhB,eAAgB4C,IAEX/C,EAAKqB,IAAI2B,IAAIC,QAMpB,MAHAP,EAAKvB,SAAS,CACZlB,WAAY1B,EAAeK,OAAOC,WAE9B,IAAIqE,QAGbL,KAAK,SAACC,GACD,GAAKK,OAAOC,KAAK7D,EAAaH,WAAWK,WAAW4D,QAAQP,EAAIQ,YAClEZ,EAAKvB,SAAS,CACZlB,WAAY1B,EAAeQ,QAC3BmB,UAAW4C,EACXzC,cAIFqC,EAAKvB,SAAS,CACZlB,WAAY1B,EAAeK,OAAOE,YAIvCyE,MAAM,SAAC1B,GACN2B,QAAQC,IAAI5B,uCASpB,OACE6B,EAAAC,EAAAC,cAACC,EAAYC,SAAb,CAAsBC,MAAOhC,KAAKhC,OAC9B1B,IAAM2F,SAASC,KAAKlC,KAAKmC,MAAMC,kBAhHd9F,IAAM+F,4BCJ3BC,8LAEF,IAAMC,EAAWtC,OAAOuC,eAAeC,SACjCC,EAAgBH,EAAWA,EAASI,MAAM,2BAA6B,GAC7E1C,OAAOuC,eAAeC,SAAW,KAC7B,EAAIC,EAAcxD,QACpBc,KAAKmC,MAAMS,QAAQC,KAAKH,EAAc,qCAKxC,OAAOpG,IAAMwG,aAAaxG,IAAM2F,SAASC,KAAKlC,KAAKmC,MAAMC,UAAlDhB,OAAA2B,EAAA,EAAA3B,CAAA,GAAiEpB,KAAKmC,eAXvC7F,IAAM+F,WAejCW,cAAWV,qCClBXW,EAAA,CACbC,QAAW,EACXC,UAAa,EACbC,MAAS,GACTC,MAAS,MCJIC,EAAA,CACbC,MAAO7G,OAAO,SACd8G,OAAQ9G,OAAO,UACf+G,KAAM/G,OAAO,QACbgH,KAAMhH,OAAO,QACbiH,SAAUjH,OAAO,YACjBkH,MAAOlH,OAAO,SACdmH,IAAKnH,OAAO,OACZoH,OAAQpH,OAAO,UACfqH,IAAKrH,OAAO,OACZsH,KAAMtH,OAAO,SCVAuH,EAAA,CACbC,gBAAiBxH,OAAO,mBACxByH,QAASzH,OAAO,WAChB0H,gBAAiB1H,OAAO,mBACxB2H,QAAS3H,OAAO,WAChB4H,KAAM5H,OAAO,QACb6H,KAAM7H,OAAO,QACb8H,SAAU9H,OAAO,YACjB+H,WAAY/H,OAAO,cACnBgI,SAAUhI,OAAO,YACjBiI,WAAYjI,OAAO,cACnBkI,aAAclI,OAAO,gBACrBmI,KAAMnI,OAAO,QACboI,MAAOpI,OAAO,SACdqI,KAAMrI,OAAO,QACbsI,gBAAiBtI,OAAO,mBACxBuI,IAAKvI,OAAO,OACZwI,eAAgBxI,OAAO,mBCgWVyI,aA1Wb,SAAAA,IAAe/D,OAAAgE,EAAA,EAAAhE,CAAApB,KAAAmF,GACbnF,KAAKqF,GAAK,KACVrF,KAAKsF,MAAQ,KACbtF,KAAKuF,QAAU,KACfvF,KAAKxB,YAAc,KACnBwB,KAAKwF,UAAY,KACjBxF,KAAKyF,UAAY,KACjBzF,KAAK0F,MAAQ,EACb1F,KAAK2F,QAAU,EACf3F,KAAK4F,MAAQ,EACb5F,KAAK6F,OAAS,EACd7F,KAAK8F,gBAAkB,GACvB9F,KAAK+F,MAAQ,EACb/F,KAAKgG,IAAM,EACXhG,KAAKiG,IAAM,EACXjG,KAAKkG,kBAAmB,EACxBlG,KAAKmG,gBAAiB,EACtBnG,KAAK7B,UAAY,iEAgPAiI,EAAOC,GACxB,IAAMC,EAAMC,KAAKC,MAAM,IAAOH,GAC9B,OAAQE,KAAKC,MAAMD,KAAKE,SAAWH,GAAOD,EAAOD,mCAKjD,IAFO,IAAA1H,EAAAsB,KACHxB,EAAc,GACTkI,EAAI,EAAGA,EAAI,GAAIA,IACtB,OAAQA,GACN,KAAK,EACHlI,GAAe,KAAOwB,KAAK2F,QAAQpE,SAAS,KAAKxC,OAAO,GAAKP,EAC7D,MACF,KAAK,EAEHA,GAAe,KAAOwB,KAAK2G,mBAAmB3G,KAAK8F,gBAAgB5G,OAAQ,GAAGqC,SAAS,KAAKxC,OAAO,GAAKP,EACxG,MACF,KAAK,EACHA,GAAe,KAAOwB,KAAK0F,MAAMnE,SAAS,KAAKxC,OAAO,GAAKP,EAC3D,MACF,KAAK,EACHA,GAAe,KAAOwB,KAAK6F,OAAOtE,SAAS,KAAKxC,OAAO,GAAKP,EAC5D,MACF,KAAK,EAEH,IAAM6C,EAAOD,OAAOC,KAAKiC,GACnBsD,EAAYvF,EAAKwF,OAAO,SAACC,GAAU,OAAOxD,EAAUwD,KAASpI,EAAK8G,YAAa,GACrFhH,GAAe,KAAOwB,KAAK2G,mBAAmBtF,EAAKC,QAAQsF,GAAYvF,EAAKnC,QAAQqC,SAAS,KAAKxC,OAAO,GAAKP,EAE9G,MACF,KAAK,EACHA,GAAe,KAAOwB,KAAK4F,MAAMrE,SAAS,KAAKxC,OAAO,GAAKP,EAC3D,MACF,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,WACE,IAAM4H,EAAQM,EAAI,GAClB,GAAIN,EAAQ1H,EAAKoH,gBAAgB5G,OAAQ,CACvC,IAAMmC,EAAOD,OAAOC,KAAKiC,GACnBsD,EAAYvF,EAAKwF,OAAO,SAACC,GAAU,OAAOxD,EAAUwD,KAASpI,EAAKoH,gBAAgBM,KAAU,GAClG5H,GAAe,KAAOE,EAAKiI,mBAAmBtF,EAAKC,QAAQsF,GAAYvF,EAAKnC,QAAQqC,SAAS,KAAKxC,OAAO,GAAKP,OAG9GA,GAAe,KAAO+H,KAAKC,MAAsB,IAAhBD,KAAKE,UAAiBlF,SAAS,KAAKxC,OAAO,GAAKP,EARrF,GAWE,MACF,KAAK,GAEH,IAAM6C,EAAOD,OAAOC,KAAK4C,GACnB2C,EAAYvF,EAAKwF,OAAO,SAACC,GAAU,OAAO7C,EAAU6C,KAASpI,EAAK+G,YAAa,GACrFjH,GAAe,KAAOwB,KAAK2G,mBAAmBtF,EAAKC,QAAQsF,GAAYvF,EAAKnC,QAAQqC,SAAS,KAAKxC,OAAO,GAAKP,EAE9G,MACF,KAAK,GACHA,GAAe,WAAawB,KAAKgG,IAAIzE,SAAS,KAAKzC,QAAQ,EAAG,GAAKN,EACnE,MACF,KAAK,GACHA,GAAe,WAAawB,KAAKgG,IAAIzE,SAAS,KAAKzC,QAAQ,EAAG,GAAKN,EACnE,MACF,KAAK,GACHA,GAAe,WAAawB,KAAKgG,IAAIzE,SAAS,KAAKzC,QAAQ,EAAG,GAAKN,EACnE,MACF,KAAK,GACHA,GAAe,WAAawB,KAAKgG,IAAIzE,SAAS,KAAKzC,QAAQ,EAAG,GAAKN,EACnE,MACF,KAAK,GACHA,GAAe,WAAawB,KAAK+F,MAAMxE,SAAS,KAAKzC,QAAQ,EAAG,GAAKN,EACrE,MACF,KAAK,GACHA,GAAe,WAAawB,KAAK+F,MAAMxE,SAAS,KAAKzC,QAAQ,EAAG,GAAKN,EACrE,MACF,KAAK,GACHA,GAAe,WAAawB,KAAK+F,MAAMxE,SAAS,KAAKzC,QAAQ,EAAG,GAAKN,EACrE,MACF,KAAK,GACHA,GAAe,WAAawB,KAAK+F,MAAMxE,SAAS,KAAKzC,QAAQ,EAAG,GAAKN,EACrE,MACF,KAAK,GACHA,GAAe,OAASwB,KAAKiG,IAAI1E,SAAS,KAAKzC,QAAQ,EAAG,GAAKN,EAC/D,MACF,KAAK,GACHA,GAAe,OAASwB,KAAKiG,IAAI1E,SAAS,KAAKzC,QAAQ,EAAG,GAAKN,EAC/D,MACF,QACEA,GAAe,KAAO+H,KAAKC,MAAsB,IAAhBD,KAAKE,UAAiBlF,SAAS,KAAKxC,OAAO,GAAKP,EAIvF,WAAAuI,OAAYvI,4CAIZwB,KAAKkG,kBAAmB,EACxBjG,OAAO+G,aAAaC,QAAQ9B,EAAW+B,oBAAoBlH,KAAKqF,GAAIrF,KAAK7B,WApW1D,+CAwWf6B,KAAKmG,gBAAiB,EACtBlG,OAAO+G,aAAaC,QAAQ9B,EAAWgC,kBAAkBnH,KAAKqF,GAAIrF,KAAK7B,WAzWxD,sDAuBUiJ,EAASjJ,GAClC,gCAAA4I,OAAiC5I,EAAjC,KAAA4I,OAA8C,KAAAA,OAAKK,EAAQrI,OAAO,KAAMsI,yDAGjDD,EAASjJ,GAChC,8BAAA4I,OAA+B5I,EAA/B,KAAA4I,OAA4C,KAAAA,OAAKK,EAAQrI,OAAO,KAAMsI,sDAGlDhC,EAAIlH,GACxB,MAhCe,SAgCR8B,OAAO+G,aAAaM,QAAQtH,KAAKmH,kBAAkB9B,EAAIlH,sDAG/BoJ,EAAO/I,GACtC,IACMgJ,EAAOhJ,EAAYM,QAAO,GAAgB,GAC1CuC,EAAOD,OAAOC,KAAKiC,GACzBiE,EAAM/B,UAAYlC,EAAUjC,EAAKoG,SAASD,EAAM,IAAMnG,EAAKnC,wDAG/BqI,EAAO/I,GACnC,IACMgJ,EAAOhJ,EAAYM,QAAO,GAAgB,GAC1C4I,EAAS,CACbpE,EAAUM,MACVN,EAAUO,IACVP,EAAUQ,OACVR,EAAUS,KAEZwD,EAAM/B,UAAYkC,EAAOD,SAASD,EAAM,IAAME,EAAOxI,gDAGhCqI,EAAO/I,GAC5B,IAAK,IAAIkI,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMc,EAAOhJ,EAAYM,QAAmB,GAAT4H,EAAI,GAAS,GAChD,OAAQA,GACN,KAAK,EACHa,EAAM5B,QAAU8B,SAASD,EAAM,IAC/B,MACF,KAAK,EACHD,EAAM7B,MAAQ+B,SAASD,EAAM,IAC7B,MACF,KAAK,EACHD,EAAM1B,OAAS4B,SAASD,EAAM,IAC9B,MACF,KAAK,EACHD,EAAM3B,MAAQ6B,SAASD,EAAM,IAC7B,MACF,KAAK,GAEH,IAAMnG,EAAOD,OAAOC,KAAK4C,GACzBsD,EAAM9B,UAAYxB,EAAU5C,EAAKoG,SAASD,EAAM,IAAMnG,EAAKnC,iDAS9CqI,EAAO/I,GAE1B,IADA,IAAImJ,EAAa,EACRjB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMc,EAAOhJ,EAAYM,QAAmB,GAAT4H,EAAI,GAAS,GAChD,OAAQA,GACN,KAAK,EACHa,EAAM5B,QAAU8B,SAASD,EAAM,IAC/B,MACF,KAAK,EACHG,EAAaF,SAASD,EAAM,IAAM,EAClC,MACF,KAAK,EACHD,EAAM7B,MAAQ+B,SAASD,EAAM,IAC7B,MACF,KAAK,EACHD,EAAM1B,OAAS4B,SAASD,EAAM,IAC9B,MACF,KAAK,EACHD,EAAM3B,MAAQ6B,SAASD,EAAM,IAC7B,MACF,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAGH,GADcd,EAAI,GACNiB,EAAY,CACtB,IAAMtG,EAAOD,OAAOC,KAAKiC,GACnBkC,EAAYlC,EAAUjC,EAAKoG,SAASD,EAAM,IAAMnG,EAAKnC,SAC3DqI,EAAMzB,gBAAgBjD,KAAK2C,GAG7B,MACF,KAAK,GAEH,IAAMnE,EAAOD,OAAOC,KAAK4C,GACzBsD,EAAM9B,UAAYxB,EAAU5C,EAAKoG,SAASD,EAAM,IAAMnG,EAAKnC,SAE3D,MACF,KAAK,GACHqI,EAAMvB,KAAOyB,SAASD,EAAM,IAC5B,MACF,KAAK,GACHD,EAAMvB,KAA4B,IAArByB,SAASD,EAAM,IAC5B,MACF,KAAK,GACHD,EAAMvB,KAA4B,MAArByB,SAASD,EAAM,IAC5B,MACF,KAAK,GACHD,EAAMvB,KAA4B,SAArByB,SAASD,EAAM,IAC5B,MACF,KAAK,GACHD,EAAMxB,OAAS0B,SAASD,EAAM,IAC9B,MACF,KAAK,GACHD,EAAMxB,OAA8B,IAArB0B,SAASD,EAAM,IAC9B,MACF,KAAK,GACHD,EAAMxB,OAA8B,MAArB0B,SAASD,EAAM,IAC9B,MACF,KAAK,GACHD,EAAMxB,OAA8B,SAArB0B,SAASD,EAAM,IAC9B,MACF,KAAK,GACHD,EAAMtB,KAAOwB,SAASD,EAAM,IAC5B,MACF,KAAK,GACHD,EAAMtB,KAA4B,IAArBwB,SAASD,EAAM,qCAQtBnC,EAAIC,EAAOC,EAAS/G,EAAaL,GAE7C,GAAY,OAAPkH,GACe,IAAdA,EAAGnG,QACO,OAAVoG,GACiB,IAAjBA,EAAMpG,QACM,OAAZqG,GACmB,IAAnBA,EAAQrG,QACQ,OAAhBV,GACuB,IAAvBA,EAAYU,OAEhB,OAAO,KAGT,IAAMqI,EAAQ,IAAIpC,EAyBlB,OAxBAoC,EAAMlC,GAAN,KAAA0B,OAAgB1B,EAAGtG,OAAO,KAC1BwI,EAAMjC,MAAQA,EACdiC,EAAMhC,QAAUA,EAChBgC,EAAM/I,YAAN,KAAAuI,OAAyBvI,EAAYO,OAAO,KAC5CwI,EAAMpJ,UAAYA,EAEdoH,EAAQ8B,gBAAkB7J,EAAaD,SAASG,UAAUS,GAAWkJ,cACvErH,KAAK4H,0BAA0BL,EAAO/I,GAGtCwB,KAAK6H,uBAAuBN,EAAO/I,GAGjC+I,EAAM/B,YAAclC,EAAUU,MAChChE,KAAK8H,cAAcP,EAAO/I,GAC1B+I,EAAMpB,gBAAiB,IAGvBnG,KAAK+H,gBAAgBR,EAAO/I,GAC5B+I,EAAMpB,eAhMO,SAgMWlG,OAAO+G,aAAaM,QAAQnC,EAAWgC,kBAAkBI,EAAMlC,GAAIlH,KAG7FoJ,EAAMrB,iBAnMS,SAmMWjG,OAAO+G,aAAaM,QAAQnC,EAAW+B,oBAAoBK,EAAMlC,GAAIlH,IAExFoJ,iCAIP,IAAMA,EAAQ,IAAIpC,EAEZ6C,EAAmB,CACvB1E,EAAUC,MACVD,EAAUE,OACVF,EAAUG,KACVH,EAAUI,KACVJ,EAAUK,UAEZ4D,EAAM/B,UAAYwC,EAAiBzB,KAAKC,MAAMD,KAAKE,SAAWuB,EAAiB9I,SAE/EqI,EAAM7B,MAAQa,KAAKC,MAAsB,IAAhBD,KAAKE,UAC9Bc,EAAM5B,QAAUY,KAAKC,MAAsB,IAAhBD,KAAKE,UAChCc,EAAM3B,MAAQW,KAAKC,MAAsB,IAAhBD,KAAKE,UAC9Bc,EAAM1B,OAASU,KAAKC,MAAsB,IAAhBD,KAAKE,UAE/Bc,EAAMxB,MAAQQ,KAAKC,MAAsB,WAAhBD,KAAKE,UAC9Bc,EAAMvB,IAAMO,KAAKC,MAAsB,WAAhBD,KAAKE,UAC5Bc,EAAMtB,IAAMM,KAAKC,MAAsB,MAAhBD,KAAKE,UAE5B,IAAMwB,EAAmB7G,OAAOsG,OAAOzD,GAGvC,OAFAsD,EAAM9B,UAAYwC,EAAiB1B,KAAKC,MAAMD,KAAKE,SAAWwB,EAAiB/I,SAExEqI,oCAGQW,GACf,IAAMX,EAAQ,IAAIpC,EAElBoC,EAAM/B,UAAYlC,EAAUU,KAE5BuD,EAAM7B,MAAQa,KAAKC,MAAM0B,EAAYC,IAAI,SAACZ,GAAD,OAAWA,EAAM7B,QAAO0C,OAAO,SAACC,EAAMC,GAAP,OAAmBD,EAAOC,IAAWJ,EAAYhJ,QACzHqI,EAAM5B,QAAUY,KAAKC,MAAM0B,EAAYC,IAAI,SAACZ,GAAD,OAAWA,EAAM5B,UAASyC,OAAO,SAACC,EAAMC,GAAP,OAAmBD,EAAOC,IAAWJ,EAAYhJ,QAC7HqI,EAAM3B,MAAQW,KAAKC,MAAM0B,EAAYC,IAAI,SAACZ,GAAD,OAAWA,EAAM3B,QAAOwC,OAAO,SAACC,EAAMC,GAAP,OAAmBD,EAAOC,IAAWJ,EAAYhJ,QACzHqI,EAAM1B,OAASU,KAAKC,MAAM0B,EAAYC,IAAI,SAACZ,GAAD,OAAWA,EAAM1B,SAAQuC,OAAO,SAACC,EAAMC,GAAP,OAAmBD,EAAOC,IAAWJ,EAAYhJ,QAE3HqI,EAAM9B,UAAYyC,EAAY3B,KAAKC,MAAMD,KAAKE,SAAWyB,EAAYhJ,SAAUuG,UAE/E,IAAM8C,EAAeL,EAAYC,IAAI,SAACZ,GAAD,OAAWA,EAAM9B,YAAWoB,OAAO,SAAC7E,EAAOoE,EAAOoC,GAAf,OAAwBA,EAAKlH,QAAQU,KAAWoE,IAClHqC,EAAaP,EAAYhJ,OAASqJ,EAAarJ,OAiBrD,OAfAqI,EAAMxB,MAAQQ,KAAKC,OACkB,IAAlCD,KAAKmC,IAAInB,EAAM7B,MAAQ,IAAM,GACS,IAApCa,KAAKmC,IAAInB,EAAM5B,QAAU,IAAM,GACG,IAAlCY,KAAKmC,IAAInB,EAAM3B,MAAQ,IAAM,IAC9B6C,GAAcP,EAAYhJ,OAE9BqI,EAAMvB,IAAMO,KAAKC,OACoB,IAAlCD,KAAKmC,IAAInB,EAAM3B,MAAQ,IAAM,GACQ,IAAnCW,KAAKmC,IAAInB,EAAM1B,OAAS,IAAM,IAC/B4C,GAAcP,EAAYhJ,OAE9BqI,EAAMtB,IAAMM,KAAKC,MAAM,KAAAD,KAAKmC,IAAInB,EAAM1B,OAAS,IAAM,GAAkB4C,GAEvElB,EAAMzB,gBAAkBoC,EAAYC,IAAI,SAACZ,GAAD,OAAWA,EAAM/B,YAElD+B,2MC9MIoB,oLAzCJ,IAEHC,EAFGC,EAC8B7I,KAAKmC,MAAnC2G,EADAD,EACAC,WAAeC,EADf3H,OAAA4H,EAAA,EAAA5H,CAAAyH,EAAA,gBAGP,OAAQC,EAAWtD,WACjB,KAAKlC,EAAUC,MACbqF,EAAMK,IACN,MACF,KAAK3F,EAAUE,OACboF,EAAMM,IACN,MACF,KAAK5F,EAAUG,KACbmF,EAAMO,IACN,MACF,KAAK7F,EAAUI,KACbkF,EAAMQ,IACN,MACF,KAAK9F,EAAUK,SACbiF,EAAMS,IACN,MACF,KAAK/F,EAAUM,MACbgF,EAAMU,IACN,MACF,KAAKhG,EAAUO,IACb+E,EAAMW,IACN,MACF,KAAKjG,EAAUQ,OACb8E,EAAMY,IACN,MACF,KAAKlG,EAAUS,IACb6E,EAAMa,KACN,MACF,KAAKnG,EAAUU,KACb4E,EAAMc,KACN,MACF,QACE,OAAO,KAEX,OAAO/H,EAAAC,EAAAC,cAAA,MAAAT,OAAAuI,OAAA,CAAKf,IAAKA,EAAKgB,IAAKd,EAAWzD,IAAQ0D,WAtC1BzM,IAAM+F,+BCiCfwH,oLAzCJ,IAAAhB,EAC6B7I,KAAKmC,MAAlCqD,EADAqD,EACArD,UAAcuD,EADd3H,OAAA4H,EAAA,EAAA5H,CAAAyH,EAAA,eAEHiB,EAAQ,GACZ,OAAQtE,GACN,KAAKlC,EAAUC,MACbuG,EAAQ,QACR,MACF,KAAKxG,EAAUE,OACbsG,EAAQ,SACR,MACF,KAAKxG,EAAUG,KACbqG,EAAQ,OACR,MACF,KAAKxG,EAAUI,KACboG,EAAQ,OACR,MACF,KAAKxG,EAAUK,SACbmG,EAAQ,WACR,MACF,KAAKxG,EAAUM,MACbkG,EAAQ,QACR,MACF,KAAKxG,EAAUO,IACbiG,EAAQ,MACR,MACF,KAAKxG,EAAUQ,OACbgG,EAAQ,SACR,MACF,KAAKxG,EAAUS,IACb+F,EAAQ,MACR,MACF,KAAKxG,EAAUU,KACb8F,EAAQ,OACR,MACF,QACE,OAAO,KAEX,OAAOnI,EAAAC,EAAAC,cAACkI,GAAAnI,EAADR,OAAAuI,OAAA,CAAMG,MAAOA,EAAOE,MAAM,WAAcjB,WAtCvBzM,IAAM+F,WC+DnB4H,oLA9DJ,IAAApB,EAC6B7I,KAAKmC,MAAlCsD,EADAoD,EACApD,UAAcsD,EADd3H,OAAA4H,EAAA,EAAA5H,CAAAyH,EAAA,eAEHiB,EAAQ,GACZ,OAAQrE,GACN,KAAKxB,EAAUC,gBACb4F,EAAQ,cACR,MACF,KAAK7F,EAAUE,QACb2F,EAAQ,UACR,MACF,KAAK7F,EAAUG,gBACb0F,EAAQ,kBACR,MACF,KAAK7F,EAAUI,QACbyF,EAAQ,UACR,MACF,KAAK7F,EAAUK,KACbwF,EAAQ,OACR,MACF,KAAK7F,EAAUM,KACbuF,EAAQ,OACR,MACF,KAAK7F,EAAUO,SACbsF,EAAQ,YACR,MACF,KAAK7F,EAAUQ,WACbqF,EAAQ,aACR,MACF,KAAK7F,EAAUS,SACboF,EAAQ,WACR,MACF,KAAK7F,EAAUU,WACbmF,EAAQ,aACR,MACF,KAAK7F,EAAUW,aACbkF,EAAQ,eACR,MACF,KAAK7F,EAAUY,KACbiF,EAAQ,OACR,MACF,KAAK7F,EAAUa,MACbgF,EAAQ,QACR,MACF,KAAK7F,EAAUc,KACb+E,EAAQ,OACR,MACF,KAAK7F,EAAUe,gBACb8E,EAAQ,cACR,MACF,KAAK7F,EAAUgB,IACb6E,EAAQ,MACR,MACF,KAAK7F,EAAUiB,eACb4E,EAAQ,iBACR,MACF,QACE,OAAO,KAEX,OAAOnI,EAAAC,EAAAC,cAACkI,GAAAnI,EAADR,OAAAuI,OAAA,CAAMG,MAAOA,EAAOE,MAAM,aAAgBjB,WA3DzBzM,IAAM+F,+BCDnB6H,GAAA,kBACbvI,EAAAC,EAAAC,cAAA,wBAEEF,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAkBwI,KAAM,OCMtBC,GAAe,SAACC,EAAWtI,GAAZ,OACnBL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0I,EAAA3I,EAAD,CAAgB4I,QAAQ,cAAcxI,MAAOuE,KAAKkE,MAAe,IAARzI,EAAe,KAAO0I,MAAO,CAACC,QAAS,eAAgBC,cAAe,SAAUC,MAAO,WADlJ,IACgKP,EADhK,MACgLtI,IA8JnK8I,8MAzJb9M,MAAQ,CACN8K,WAAY,KACZiC,YAAY,KAGdC,eAAiB,IAAIC,KAAKC,aAAa,QAAS,CAC9CR,MAAO,WACPS,SAAU,UAGZC,aAAe,IAAIH,KAAKC,aAAa,WAErCG,UAAY,SAACpF,GACX,GAAIA,EAAM,GAAI,CACZ,IAAMqF,EAAe,IAARrF,EAAa,MAAQ,OAClC,SAAAc,OAAUd,EAAV,KAAAc,OAAiBuE,GAEZ,GAAIrF,EAAM,IAAK,CACpB,IAAMsF,EAAWhF,KAAKC,MAAMP,EAAM,IAC5BuF,EAAsB,IAAbD,EAAkB,QAAU,SACrCE,EAASxF,EAAM,GACrB,OAAe,IAAXwF,EACF,GAAA1E,OAAUwE,EAAV,KAAAxE,OAAsByE,GAEF,IAAXC,EACT,GAAA1E,OAAUwE,EAAV,KAAAxE,OAAsByE,EAAtB,WAGA,GAAAzE,OAAUwE,EAAV,KAAAxE,OAAsByE,EAAtB,MAAAzE,OAAgC0E,EAAhC,SAIF,IAAM/E,EAAIH,KAAKC,MAAMP,EAAM,IACrByF,EAAUnF,KAAKC,MAAME,EAAI,IACzBiF,EAAoB,IAAZD,EAAiB,OAAS,QAClCH,EAAW7E,EAAI,GACrB,OAAiB,IAAb6E,EACF,GAAAxE,OAAU2E,EAAV,KAAA3E,OAAqB4E,GAEC,IAAbJ,EACT,GAAAxE,OAAU2E,EAAV,KAAA3E,OAAqB4E,EAArB,aAGA,GAAA5E,OAAU2E,EAAV,KAAA3E,OAAqB4E,EAArB,MAAA5E,OAA8BwE,EAA9B,cAKNK,YAAc,SAACC,GACb,OAAQA,GACN,IAAK,QACH,MAAO,+CACT,IAAK,UACH,MAAO,iDACT,IAAK,QACH,MAAO,wBACT,QACE,OAAO,SAIbC,sBAAwB,WACtB7L,OAAO8L,KAAP,uDAAAhF,OAAmErI,EAAKyD,MAAMS,QAAQoJ,SAASC,UAAY,8FAGzF,IAad3G,EAAOC,EAbOxF,EAAAC,KAAAkM,EACelM,KAAKmC,MAAMgK,MAAMC,OAA1ChF,EADU8E,EACV9E,QAASiF,EADCH,EACDG,YACXlO,EAAY8E,EAAUoJ,GACtBhM,EAAO/C,EAAQ,IACfW,EAAO,IAAIoC,EAAK,IAAIA,EAAKiM,UAAUC,aAAavM,KAAK4L,YAAYS,KAC/DhP,EAAeG,EAAfH,WACFmP,EAAa,IAAIvO,EAAKqB,IAAImN,SAASpP,EAAWI,IAAKJ,EAAWK,UAAUS,IAE1EuO,OAAOC,MAAMlF,SAASL,EAAS,KACjCpH,KAAKZ,SAAS,CAAC2L,YAAY,IAK7ByB,EAAWI,QAAQC,QAAQzF,GAAS0F,OACjChM,KAAK,SAACiM,GAEL,OADAzH,EAAQyH,EACDP,EAAWI,QAAQrH,QAAQ6B,GAAS0F,SAE5ChM,KAAK,SAACiM,GAEL,OADAxH,EAAUwH,EACHP,EAAWI,QAAQpO,YAAY4I,GAAS0F,SAEhDhM,KAAK,SAACiM,GACL,IACMvO,GAAe,mEADV,IAAIP,EAAKW,MAAMoO,GAAGD,GACgExL,SAAS,KAAKxC,OAAO,IAC5GwI,EAAQpC,EAAW8H,OAAO7F,EAAS9B,EAAOC,EAAS/G,EAAaL,GACzD,MAAToJ,EACFxH,EAAKX,SAAS,CAAC0J,WAAYvB,IAE3BxH,EAAKX,SAAS,CAAC2L,YAAY,uCAK1B,IAAAtM,EAC4BuB,KAAKhC,MAAhC8K,EADDrK,EACCqK,WAAYiC,EADbtM,EACasM,WACpB,OACEpJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WAAM7B,KAAKmC,MAAMgK,MAAMC,OAAOhF,UAEZ,IAAf2D,EACCpJ,EAAAC,EAAAC,cAAA,8BAEkB,OAAfiH,EACHnH,EAAAC,EAAAC,cAACF,EAAAC,EAAMsL,SAAP,KACEvL,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACsL,GAAD,CAAWrE,WAAYA,EAAY4B,MAAO,CAAC0C,OAAQ,YAErDtE,EAAWtD,YAAclC,EAAUU,MAAS8E,EAAW3C,gBACtDxE,EAAAC,EAAAC,cAAA,OAAK6I,MAAO,CAACV,MAAO,YAApB,0BAGJrI,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACwL,GAAD,CAAe7H,UAAWsD,EAAWtD,YAAa7D,EAAAC,EAAAC,cAACyL,GAAD,CAAe7H,UAAWqD,EAAWrD,aAEzFqD,EAAWtD,YAAclC,EAAUU,MAClCrC,EAAAC,EAAAC,cAACF,EAAAC,EAAMsL,SAAP,KACEvL,EAAAC,EAAAC,cAAA,WACIiH,EAAWhD,gBAAgBqC,IAAI,SAAC3C,EAAWY,GAAZ,OAAsBzE,EAAAC,EAAAC,cAACwL,GAAD,CAAe7H,UAAWA,EAAWsB,IAAG,aAAAC,OAAeX,QAEhHzE,EAAAC,EAAAC,cAAA,OAAK6I,MAAO,CAAC6C,SAAU,OAAQC,WAAY,SACzC7L,EAAAC,EAAAC,cAAA,sBAAc7B,KAAKgL,eAAeyC,OAAO3E,EAAW/C,QACpDpE,EAAAC,EAAAC,cAAA,oBAAY7B,KAAKoL,aAAaqC,OAAO3E,EAAW9C,MAChDrE,EAAAC,EAAAC,cAAA,oBAAY7B,KAAKqL,UAAUvC,EAAW7C,QAK5CoE,GAAa,QAASvB,EAAWpD,OACjC2E,GAAa,UAAWvB,EAAWnD,SACnC0E,GAAa,QAASvB,EAAWlD,OACjCyE,GAAa,SAAUvB,EAAWjD,QACpClE,EAAAC,EAAAC,cAAA,OAAK6I,MAAO,CAACgD,UAAW,SACtB/L,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,CAAQ4I,QAAQ,WAAWoD,QAAS5N,KAAK8L,uBAAzC,YAOJnK,EAAAC,EAAAC,cAACqI,GAAD,cAlJc5N,IAAM+F,uEChBjBwL,GAAA,kBACblM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,sBCPSiM,GAAA,kBACbnM,EAAAC,EAAAC,cAAA,kCCiCakM,GA7Bc,SAACC,GAAD,gBAAAC,GAAA,SAAAC,IAAA,OAAA9M,OAAAgE,EAAA,EAAAhE,CAAApB,KAAAkO,GAAA9M,OAAA+M,EAAA,EAAA/M,CAAApB,KAAAoB,OAAAgN,EAAA,EAAAhN,CAAA8M,GAAAG,MAAArO,KAAAf,YAAA,OAAAmC,OAAAkN,EAAA,EAAAlN,CAAA8M,EAAAD,GAAA7M,OAAAmN,EAAA,EAAAnN,CAAA8M,EAAA,EAAApH,IAAA,SAAA9E,MAAA,WAEhB,IAAAtD,EAAAsB,KACP,OACE2B,EAAAC,EAAAC,cAACC,EAAY0M,SAAb,KAEI,SAACC,GACC,OAAQA,EAAcvQ,YACpB,KAAK1B,EAAeK,OAAOC,SACzB,OAAO6E,EAAAC,EAAAC,cAACiM,GAAD,MACT,KAAKtR,EAAeK,OAAOE,QACzB,OAAO4E,EAAAC,EAAAC,cAACgM,GAAD,MACT,KAAKrR,EAAeQ,QAClB,IAAMmF,EAAKf,OAAA2B,EAAA,EAAA3B,CAAA,GACN1C,EAAKyD,MACLsM,GAEL,OAAO9M,EAAAC,EAAAC,cAACmM,EAAqB7L,GAC/B,QACE,OAAOR,EAAAC,EAAAC,cAACqI,GAAD,aAnBIgE,EAAA,CACb5R,IAAM+F,YCRPqM,GAAA,CACb/Q,EAAG,UACHC,EAAG,UACHC,GAAI,QACJC,KAAM,qICAO6Q,GAAA,kBACbhN,EAAAC,EAAAC,cAACkI,GAAAnI,EAAD,CAAMkI,MAAM,OAAOY,MAAO,CAACV,MAAO4E,KAAI,KAAQC,gBAAiBD,KAAI,QCW/DvE,GAAe,SAACC,EAAWtI,GAAZ,OACnBL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC0I,EAAA3I,EAAD,CAAgB4I,QAAQ,cAAcxI,MAAOuE,KAAKkE,MAAe,IAARzI,EAAe,KAAO0I,MAAO,CAACC,QAAS,eAAgBC,cAAe,SAAUC,MAAO,UAApJ,IAAiKP,EAAjK,MAAiLtI,IA0EpK8M,8MAtEbC,YAAc,WAAM,IAAAlG,EACYnK,EAAKyD,MAA5B2G,EADWD,EACXC,YACP8E,EAFkB/E,EACC+E,SACX9E,4EAGD,IAAAkG,EACuChP,KAAKmC,MAA5C2G,EADAkG,EACAlG,WAAYmG,EADZD,EACYC,YAAaC,EADzBF,EACyBE,WAC5BC,EAAY,CACdtE,MAAO,QAaT,OAXIoE,EACEC,EACFC,EAAUN,gBAAkBO,KAAK,KAExBtG,EAAW3C,iBACpBgJ,EAAUN,gBAAkBQ,KAAK,MAG1BvG,GAAeA,EAAWtD,YAAclC,EAAUU,MAAS8E,EAAW3C,iBAC/EgJ,EAAUN,gBAAkBQ,KAAK,MAGjC1N,EAAAC,EAAAC,cAACyN,GAAA1N,EAAD,CAAMgM,QAAS5N,KAAK+O,aAClBpN,EAAAC,EAAAC,cAAC0N,GAAA3N,EAAD,CAAgB8I,MAAOyE,GAEJ,MAAdrG,EACCnH,EAAAC,EAAAC,cAAC2N,GAAA5N,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAK6I,MAAO,CAAC+E,MAAO,OAAQrC,OAAQ,QAASsC,aAAc,SACzD/N,EAAAC,EAAAC,cAACqI,GAAD,QAKJvI,EAAAC,EAAAC,cAAC2N,GAAA5N,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAK6I,MAAO,CAAC+E,MAAO,OAAQ5E,MAAO,QAASuC,OAAQ,QAASsC,aAAc,SACzE/N,EAAAC,EAAAC,cAACsL,GAAD,CAAWrE,WAAYA,EAAY4B,MAAO,CAACG,MAAO,OAAQuC,OAAQ,OAAQuC,SAAU,OAAQC,UAAW,WAEzGjO,EAAAC,EAAAC,cAAA,OAAK6I,MAAO,CAAC+E,MAAO,SAClB9N,EAAAC,EAAAC,cAAA,MAAI6I,MAAO,CAACmF,UAAW,SACrBlO,EAAAC,EAAAC,cAAA,WAEKiH,EAAW5C,kBACVvE,EAAAC,EAAAC,cAAC8M,GAAD,MAGJhN,EAAAC,EAAAC,cAACwL,GAAD,CAAe7H,UAAWsD,EAAWtD,YACrC7D,EAAAC,EAAAC,cAACyL,GAAD,CAAe7H,UAAWqD,EAAWrD,aAErC4E,GAAa,QAASvB,EAAWpD,OACjC2E,GAAa,UAAWvB,EAAWnD,SACnC0E,GAAa,QAASvB,EAAWlD,OACjCyE,GAAa,SAAUvB,EAAWjD,UAItCoJ,IAAgBnG,EAAW3C,gBACzBxE,EAAAC,EAAAC,cAAA,OAAK6I,MAAO,CAAC+E,MAAO,UAChBP,EAAavN,EAAAC,EAAAC,cAACiO,GAAAlO,EAAD,MAAeD,EAAAC,EAAAC,cAACkO,GAAAnO,EAAD,iBA1D5BtF,IAAM+F,WCNxB2N,GAAiB,EAEjBC,8MACJjS,MAAQ,CACNkS,aAAc,KACdC,oBAAoB,EACpBC,WAAW,EACXlI,YAAa,GACb+G,aAAa,EACboB,iBAAkB,MAGpBC,cAAgB,SAACC,EAAWC,GAC1B,GAAID,EAAY,EAEd,OADA7R,EAAKU,SAAS,CAAC+Q,oBAAoB,IAC5B,KAEF,GAAIK,GAAe,EAExB,OADA9R,EAAKU,SAAS,CAAC+Q,oBAAoB,EAAOC,WAAW,IAC9C,KAPiC,IAYtC/K,EAAIE,EAZkCsD,EASJnK,EAAKyD,MAAnChE,EATkC0K,EASlC1K,UAAWC,EATuByK,EASvBzK,eACXf,EAAeG,EAAfH,WACFmP,EAAa,IAAI9N,EAAKyD,MAAMlE,KAAKqB,IAAImN,SAASpP,EAAWI,IAAKJ,EAAWK,UAAUS,IAEzFqO,EAAWI,QAAQ6D,oBAAoBrS,EAAgBmS,GAAWzD,KAAK,CAACtN,KAAMpB,IAC3E0C,KAAK,SAACiM,GACL,IAAM2D,EAAK,IAAIhS,EAAKyD,MAAMlE,KAAKW,MAAMoO,GAAGD,GAExC,OADA1H,GAAM,mEAAqEqL,EAAGnP,SAAS,KAAKxC,OAAO,IAC5FyN,EAAWI,QAAQrH,QAAnB,KAAAwB,OAAgC1B,IAAMyH,KAAK,CAACtN,KAAMpB,MAE1D0C,KAAK,SAACiM,GAEL,OADAxH,EAAUwH,EACHP,EAAWI,QAAQpO,YAAnB,KAAAuI,OAAoC1B,IAAMyH,KAAK,CAACtN,KAAMpB,MAE9D0C,KAAK,SAACiM,GACL,IACMvO,GAAe,mEADV,IAAIE,EAAKyD,MAAMlE,KAAKW,MAAMoO,GAAGD,GACqDxL,SAAS,KAAKxC,OAAO,IAC5GwI,EAAQpC,EAAW8H,OAAO5H,EAAIjH,EAAgBmH,EAAS/G,EAAaL,GAE1E,OADAO,EAAKU,SAAS,CAAC8I,YAAaxJ,EAAKV,MAAMkK,YAAYnB,OAAOQ,KACnD7I,EAAK4R,cAAcC,EAAY,EAAGC,EAAc,KAExDhP,MAAM,SAACmP,GACNjS,EAAK4R,cAAcC,EAAY,EAAGC,QAIxCI,gBAAkB,WAChB,IACMpS,EADa2G,EAAW0L,OACCC,SAC/BpS,EAAKyD,MAAM7D,WAAaI,EAAKyD,MAAM7D,UAAUE,MAG/CuS,iBAAmB,SAACjI,GAAe,IAAArK,EACSC,EAAKV,MAAvCiR,EADyBxQ,EACzBwQ,YAAaoB,EADY5R,EACZ4R,iBACjBpB,EACE,GAAKoB,EAAiB/O,QAAQwH,EAAWzD,IAC3C3G,EAAKU,SAAS,CACZiR,iBAAkBA,EAAiBxJ,OAAO,SAACO,GAAc,OAAOA,IAAY0B,EAAWzD,OAG/EgL,EAAiBnR,OAAS,IAAO4J,EAAW3C,gBACtDzH,EAAKU,SAAS,CACZiR,iBAAkBA,EAAiBtJ,OAAO+B,EAAWzD,MAKzD3G,EAAKyD,MAAMS,QAAQC,KAAnB,IAAAkE,OAA4B2H,GAAY5F,EAAW3K,WAAWkJ,cAA9D,YAAAN,OAAsF+B,EAAWzD,QAIrG2L,gBAAkB,WAAM,IAAA3R,EACgBX,EAAKV,MAAnCkS,EADc7Q,EACd6Q,aAAchI,EADA7I,EACA6I,YACtBxJ,EAAKU,SAAS,CACZ+Q,oBAAoB,EACpBC,WAAW,IAEb1R,EAAK4R,cAAcJ,EAAehI,EAAYhJ,OAAS,EAAG8Q,OAG5DiB,qBAAuB,WACrBvS,EAAKU,SAAS,CACZ6P,aAAcvQ,EAAKV,MAAMiR,YACzBoB,iBAAkB,QAItBa,uBAAyB,WAAM,IAAAtQ,EACalC,EAAKV,MAAvCkK,EADqBtH,EACrBsH,YAAamI,EADQzP,EACRyP,iBACfc,EAAmBjJ,EAAYrB,OAAO,SAACU,GAAD,OAAW,GAAK8I,EAAiB/O,QAAQiG,EAAMlC,MAErF7G,EADY2G,EAAWiM,UAAUD,GACTL,SAC9BpS,EAAKyD,MAAM7D,WAAaI,EAAKyD,MAAM7D,UAAUE,EAAa,WACxD2S,EAAiBE,QAAQ,SAACvI,GAAiBA,EAAWwI,uGAItC,IAAAvR,EAAAC,KAAAgP,EACoBhP,KAAKmC,MAAnChE,EADU6Q,EACV7Q,UAAWC,EADD4Q,EACC5Q,eACXf,EAAeG,EAAfH,WACW,IAAI2C,KAAKmC,MAAMlE,KAAKqB,IAAImN,SAASpP,EAAWI,IAAKJ,EAAWK,UAAUS,IAC9EyO,QAAQ2E,UAAUnT,GAAgB0O,KAAK,CAACtN,KAAMpB,IACtD0C,KAAK,SAACiM,GACL,IAAMyE,EAAU/J,SAASsF,GACzBhN,EAAKX,SAAS,CACZ8Q,aAAcsB,EACdrB,oBAAoB,IAEtBpQ,EAAKuQ,cAAckB,EAAU,EAAGxB,uCAI7B,IAAArP,EAAAX,KAAAyR,EAC6FzR,KAAKhC,MAAjGkS,EADDuB,EACCvB,aAAcC,EADfsB,EACetB,mBAAoBC,EADnCqB,EACmCrB,UAAWlI,EAD9CuJ,EAC8CvJ,YAAa+G,EAD3DwC,EAC2DxC,YAAaoB,EADxEoB,EACwEpB,iBACzEqB,EAAevB,EAAqBjI,EAAYhJ,OAAS,EAAIgJ,EAAYhJ,OAC/E,OACEyC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMgQ,WAAS,GACbjQ,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMiQ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGlL,IAAI,QACnCnF,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,CAAQ4I,QAAQ,WAAWoD,QAAS5N,KAAK4Q,iBAAzC,0BAIFjP,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMiQ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGlL,IAAI,aACnCnF,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,CAAQ4I,QAAQ,WAAWR,MAAM,UAAU4D,QAAS5N,KAAKiR,sBACrDhC,EAAc,mBAAqB,oBAIvCA,GAAgB,GAAKoB,EAAiBnR,QACpCyC,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMiQ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGlL,IAAI,eACnCnF,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,CAAQ4I,QAAQ,WAAWR,MAAM,YAAY4D,QAAS5N,KAAKkR,wBAA3D,iBAQW,MAAhBhB,EACCvO,EAAAC,EAAAC,cAACqI,GAAD,MAEG,EAAIwH,EACP/P,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMgQ,WAAS,GAEXK,MAAMP,GAAcQ,KAAK,GAAG/J,IAAI,SAACgK,EAAGzL,GAClC,OAAIA,EAAIwB,EAAYhJ,OAEhByC,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMiQ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGlL,IAAKJ,GACpC/E,EAAAC,EAAAC,cAACuQ,GAAD,CAAWtJ,WAAYZ,EAAYxB,GAAIuI,YAAaA,EAAaC,WAAY,GAAKmB,EAAiB/O,QAAQ4G,EAAYxB,GAAGrB,IAAKuI,QAASjN,EAAKoQ,oBAM/IpP,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMiQ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGlL,IAAKJ,GACpC/E,EAAAC,EAAAC,cAACuQ,GAAD,SAORhC,GACEzO,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,CAAMiQ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGlL,IAAK4K,GACpC/P,EAAAC,EAAAC,cAACyN,GAAA1N,EAAD,CAAMgM,QAAS5N,KAAKgR,iBAClBrP,EAAAC,EAAAC,cAAC0N,GAAA3N,EAAD,CAAgB8I,MAAO,CAACG,MAAO,SAC7BlJ,EAAAC,EAAAC,cAACyN,GAAA1N,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAK6I,MAAO,CAAC0C,OAAQ,QAASiF,QAAS,SACnC,gBAWlB1Q,EAAAC,EAAAC,cAAA,SAAI,iCApLKvF,IAAM+F,WA4LZW,eAAW+K,GAAqBkC,wFCrLhCqC,GApBM,SAACtE,GAAD,gBAAAC,GAAA,SAAAC,IAAA,OAAA9M,OAAAgE,EAAA,EAAAhE,CAAApB,KAAAkO,GAAA9M,OAAA+M,EAAA,EAAA/M,CAAApB,KAAAoB,OAAAgN,EAAA,EAAAhN,CAAA8M,GAAAG,MAAArO,KAAAf,YAAA,OAAAmC,OAAAkN,EAAA,EAAAlN,CAAA8M,EAAAD,GAAA7M,OAAAmN,EAAA,EAAAnN,CAAA8M,EAAA,EAAApH,IAAA,SAAA9E,MAAA,WAER,IAAAtD,EAAAsB,KACP,OACE2B,EAAAC,EAAAC,cAACC,EAAY0M,SAAb,KAEI,SAACC,GACC,IAAMtM,EAAKf,OAAA2B,EAAA,EAAA3B,CAAA,GACN1C,EAAKyD,MACLsM,GAEL,OAAO9M,EAAAC,EAAAC,cAACmM,EAAqB7L,SAXtB+L,EAAA,CACL5R,IAAM+F,YCOhBkQ,8MACJvU,MAAQ,CACNwU,YAAY,EACZC,QAAQ,EACRC,aAAc,QAwChBC,iBAAmB,WACjBjU,EAAKU,SAAS,CACZqT,QAAQ,OAIZG,gBAAkB,WAChBlU,EAAKyD,MAAMS,QAAQC,KAAK,wFA5CPpC,EAAWC,GAAW,IAC/BrC,EAAoB2B,KAAKmC,MAAzB9D,gBACR,GAAIA,IAAoBoC,EAAUpC,gBAChC,OAAQA,GACN,KAAKpB,EAAoBE,QACvB6C,KAAKZ,SAAS,CACZoT,YAAY,EACZC,QAAQ,IAEV,MACF,KAAKxV,EAAoBD,QACvBgD,KAAKZ,SAAS,CACZoT,YAAY,EACZC,QAAQ,EACRC,aAAc,aAEhBG,WAAW,WACT5S,OAAO+L,SAAS8G,UACf,MACH,MACF,KAAK7V,EAAoBG,OACvB4C,KAAKZ,SAAS,CACZoT,YAAY,EACZC,QAAQ,EACRC,aAAc,wBAEhB,MACF,QACE1S,KAAKZ,SAAS,CACZoT,YAAY,EACZC,QAAQ,sCAiBT,IACCtU,EAAc6B,KAAKmC,MAAnBhE,UADDM,EAEsCuB,KAAKhC,MAA1CwU,EAFD/T,EAEC+T,WAAYC,EAFbhU,EAEagU,OAAQC,EAFrBjU,EAEqBiU,aAC5B,OACE/Q,EAAAC,EAAAC,cAACkR,GAAAnR,EAAD,CAAQoR,SAAS,UACfrR,EAAAC,EAAAC,cAACoR,GAAArR,EAAD,KACED,EAAAC,EAAAC,cAACqR,GAAAtR,EAAD,CAAY4I,QAAQ,KAAKR,MAAM,UAAUU,MAAO,CAACyI,SAAU,GAAIvF,QAAS5N,KAAK4S,iBAA7E,YAIEJ,GAAc7Q,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAkBoI,MAAM,YAAYI,KAAM,KAGxDjM,GAAauQ,GAAYvQ,IACvBwD,EAAAC,EAAAC,cAACqR,GAAAtR,EAAD,CAAY4I,QAAQ,KAAKR,MAAM,WAC5B0E,GAAYvQ,KAKrBwD,EAAAC,EAAAC,cAACuR,GAAAxR,EAAD,CACEyR,aAAc,CACZC,SAAU,MACVC,WAAY,UAEdxH,KAAM0G,EACNe,iBAAkB,IAClBC,QAASzT,KAAK2S,iBACde,QAAShB,YAlFEpW,IAAM+F,WAyFZW,eAAWsP,GAAaC,0BC/FjCoB,GAAgB,GAEhBC,8MACJ5V,MAAQ,CACNgE,MAAO,KAOT6R,aAAe,SAACC,EAAO9R,GACrBtD,EAAKU,SAAS,CAAC4C,aAGjB+R,UAAY,CACVlJ,MAAO,OACPuC,OAAM,GAAArG,OAAK4M,GAAL,MACNX,SAAU,WACVgB,OAAQ,MACRnF,gBAAiBQ,KAAK,KACtB1E,QAAS,OACTsJ,eAAgB,SAChBC,WAAY,kFAIZ,OACEvS,EAAAC,EAAAC,cAAA,OAAK6I,MAAO1K,KAAK+T,WACfpS,EAAAC,EAAAC,cAAA,OAAK6I,MAAO,CAAC2H,QAAS,OAAQ8B,UAAW,WACvCxS,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGuS,KAAK,yBAAyBxK,IAAI,mBAAmByK,OAAO,SAASC,IAAI,uBAC1E3S,EAAAC,EAAAC,cAAA,OAAK+G,IAAK2L,KAAM3K,IAAI,8BAA8Bc,MAAO,CAAC0C,OAAQ,OAAQsC,aAAc,WAG5F/N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGuS,KAAK,yDAAyDxK,IAAI,eAAeyK,OAAO,SAASC,IAAI,uBACtG3S,EAAAC,EAAAC,cAAA,KAAG2S,UAAU,sBAAsB9J,MAAO,CAACV,MAAO,oDA7B5D,OAAO2J,UANUrX,IAAM+F,WA4CZW,eAAW4Q,ICjDXa,GAAA,kBACb9S,EAAAC,EAAAC,cAAA,6BCgCa6S,oLAtBX,OACE/S,EAAAC,EAAAC,cAAC8S,EAAD,KACEhT,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CAAeC,SAAU,2BACvBlT,EAAAC,EAAAC,cAACiT,EAAD,KACEnT,EAAAC,EAAAC,cAACF,EAAAC,EAAMsL,SAAP,KACEvL,EAAAC,EAAAC,cAACkT,GAAD,MACApT,EAAAC,EAAAC,cAAA,OAAK6I,MAAO,CAACsK,cAAa,GAAAjO,OAAK6M,GAAOxG,SAAZ,QACxBzL,EAAAC,EAAAC,cAACoT,EAAA,EAAD,KACEtT,EAAAC,EAAAC,cAACqT,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gCAAgCC,UAAWvK,KAC7DnJ,EAAAC,EAAAC,cAACqT,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpF,KACjCtO,EAAAC,EAAAC,cAACqT,EAAA,EAAD,CAAOG,UAAWZ,OAGtB9S,EAAAC,EAAAC,cAACyT,GAAD,iBAfIjT,aCDEkT,QACW,cAA7BtV,OAAO+L,SAASwJ,UAEe,UAA7BvV,OAAO+L,SAASwJ,UAEhBvV,OAAO+L,SAASwJ,SAASrJ,MACvB,2DCVNsJ,IAASC,OAAO/T,EAAAC,EAAAC,cAAC8T,GAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlV,KAAK,SAAAmV,GACjCA,EAAaC","file":"static/js/main.a19d3c80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/animal_music_band_singer.4a8bf5f6.png\";","module.exports = __webpack_public_path__ + \"static/media/animal_music_band_guitar.c51737a1.png\";","module.exports = __webpack_public_path__ + \"static/media/animal_music_band_bass.fa173274.png\";","module.exports = __webpack_public_path__ + \"static/media/animal_music_band_drum.f0a2870c.png\";","module.exports = __webpack_public_path__ + \"static/media/music_keyboard_woman.87f9cbb8.png\";","module.exports = __webpack_public_path__ + \"static/media/music_djembe_janbe_jambe_woman.355f3dfd.png\";","module.exports = __webpack_public_path__ + \"static/media/dtm_musician.a77bf6d4.png\";","module.exports = __webpack_public_path__ + \"static/media/musician_violin_usagi.2e27d8a8.png\";","module.exports = __webpack_public_path__ + \"static/media/sax_musician.93db737a.png\";","module.exports = __webpack_public_path__ + \"static/media/animal_music_band.611f0677.png\";","module.exports = __webpack_public_path__ + \"static/media/poweredby6p.f4b16392.png\";","import React from 'react'\n\nconst Web3Context = React.createContext()\n\nexport default Web3Context\n","export default {\n  identity: Symbol('identity'),\n  checking: Symbol('checking'),\n  waiting: Symbol('waiting'),\n  failed: {\n    notfound: Symbol('failed.notfound'),\n    network: Symbol('failed.network'),\n  },\n  success: Symbol('success'),\n}\n","export default {\n  none: Symbol('none'),\n  pending: Symbol('pending'),\n  success: Symbol('success'),\n  cancel: Symbol('cancel'),\n}\n","const SixPillars = require(\"../contracts/SixPillars.json\")\nconst BandStar = require(\"../contracts/BandStar.json\")\n\nexport default {\n  SixPillars: {\n    abi: SixPillars['abi'],\n    addresses: {\n      3: '0x9895960b93e314ef221346ab985b895da9a5b7d5',\n      4: '0x542A900357c9638AD6e944a57072c5D01f1C1Ea7',\n      42: '0x542A900357c9638AD6e944a57072c5D01f1C1Ea7',\n      5777: SixPillars['networks']['5777']['address'],\n    },\n  },\n  BandStar: {\n    abi: BandStar['abi'],\n    addresses: {\n      3: '0x26addb72ab35fad08a895cfe717c5ff312a0f699',\n      4: '0x9895960b93e314ef221346ab985b895da9a5b7d5',\n      42: '0x9895960b93e314ef221346ab985b895da9a5b7d5',\n      5777: BandStar['networks']['5777']['address'],\n    },\n  },\n}\n","import React from 'react'\nimport Web3 from 'web3'\nimport Web3Context from '../../contexts/Web3Context'\nimport Web3StatusType from '../../enums/Web3StatusType'\nimport Web3TransactionType from '../../enums/Web3TransactionType'\nimport ContractData from '../../enums/ContractData'\n\nclass Web3Provider extends React.Component {\n  state = {\n    web3: null,\n    web3Status: Web3StatusType.identity,\n    networkId: null,\n    currentAddress: null,\n    web3Transaction: Web3TransactionType.none,\n    mintToken: null,\n  }\n\n  mintData = (inscription) => {\n    const { web3, networkId } = this.state\n    const sixPillarsAddress = ContractData.SixPillars.addresses[networkId]\n    const methodHead = web3.utils.sha3(\"mint(uint256,address)\").substr(0, 10)\n    const _inscription = inscription.slice(-64)\n    const _sixPillarsAddress = ('0000000000000000000000000000000000000000000000000000000000000000' + sixPillarsAddress.substr(2, 40)).slice(-64)\n    const data = methodHead + _inscription + _sixPillarsAddress\n    return data\n  }\n\n  mintToken = (inscription, sendingCallback = null) => {\n    this.setState({web3Transaction: Web3TransactionType.none})\n    const {web3, networkId, currentAddress} = this.state\n    web3.eth.sendTransaction({\n      from: currentAddress,\n      to: ContractData.BandStar.addresses[networkId],\n      data: this.mintData(inscription),\n    })\n      .on('transactionHash', (transactionHash) => {\n        this.setState({web3Transaction: Web3TransactionType.pending})\n        sendingCallback && sendingCallback()\n      })\n      .on('receipt', (receipt) => {\n        this.setState({web3Transaction: Web3TransactionType.success})\n      })\n      .on('error', (err) => {\n        this.setState({web3Transaction: Web3TransactionType.cancel})\n      })\n  }\n\n  componentDidMount() {\n    if (typeof window.web3 === 'undefined') {\n      window.addEventListener('message', ({ data }) => {\n        if (data && data.type && data.type === 'ETHEREUM_PROVIDER_SUCCESS') {\n          const web3 = new Web3(window.ethereum)\n          this.setState({\n            web3,\n            web3Status: web3 ? Web3StatusType.checking : Web3StatusType.failed.notfound,\n          })\n        }\n      })\n      window.postMessage({ type: 'ETHEREUM_PROVIDER_REQUEST' }, '*')\n\n    } else {\n      const web3 = new Web3(window.web3.currentProvider)\n      this.setState({\n        web3,\n        web3Status: web3 ? Web3StatusType.checking : Web3StatusType.failed.notfound,\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { web3, web3Status } = this.state\n    const mintToken = this.mintToken\n    switch (web3Status) {\n      case Web3StatusType.checking:\n        this.setState({\n          web3Status: Web3StatusType.waiting,\n        })\n        web3.eth.getAccounts()\n          .then((res) => {\n            const address = res && 0 < res.length && res[0]\n            if (address) {\n              this.setState({\n                currentAddress: address,\n              })\n              return web3.eth.net.getId()\n\n            } else {\n              this.setState({\n                web3Status: Web3StatusType.failed.notfound,\n              })\n              throw new Error()\n            }\n          })\n          .then((res) => {\n            if (0 <= Object.keys(ContractData.SixPillars.addresses).indexOf(res.toString())) {\n              this.setState({\n                web3Status: Web3StatusType.success,\n                networkId: res,\n                mintToken,\n              })\n\n            } else {\n              this.setState({\n                web3Status: Web3StatusType.failed.network,\n              })\n            }\n          })\n          .catch((err) => {\n            console.log(err)\n          })\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n    return (\n      <Web3Context.Provider value={this.state} >\n        { React.Children.only(this.props.children) }\n      </Web3Context.Provider>\n    )\n  }\n}\n\nexport default Web3Provider\n","import React from 'react'\nimport { withRouter } from 'react-router'\n\nclass GithubPagesRedirectProvider extends React.Component {\n  componentDidMount() {\n    const pathName = window.sessionStorage.redirect\n    const splitPathName = pathName ? pathName.split('/llllll-sample-bandstar') : []\n    window.sessionStorage.redirect = null\n    if (1 < splitPathName.length) {\n      this.props.history.push(splitPathName[1])\n    }\n  }\n\n  render() {\n    return React.cloneElement(React.Children.only(this.props.children), {...this.props})\n  }\n}\n\nexport default withRouter(GithubPagesRedirectProvider)\n","export default {\n  'ropsten': 3,\n  'reqinkeby': 4,\n  'kovan': 42,\n  'local': 5777,\n}\n","export default {\n  vocal: Symbol('vocal'),\n  guitar: Symbol('guitar'),\n  bass: Symbol('bass'),\n  drum: Symbol('drum'),\n  keyboard: Symbol('keyboard'),\n  jambe: Symbol('jambe'),\n  dtm: Symbol('dtm'),\n  violin: Symbol('violin'),\n  sax: Symbol('sax'),\n  band: Symbol('band'),\n}\n","export default {\n  alternativeRock: Symbol('alternativeRock'),\n  bigBeat: Symbol('bigBeat'),\n  digitalHardcore: Symbol('digitalHardcore'),\n  electro: Symbol('electro'),\n  folk: Symbol('folk'),\n  funk: Symbol('funk'),\n  ukGarage: Symbol('ukGarage'),\n  gothicRock: Symbol('gothicRock'),\n  hardRock: Symbol('hardRock'),\n  heavyMetal: Symbol('heavyMetal'),\n  instrumental: Symbol('instrumental'),\n  jazz: Symbol('jazz'),\n  noise: Symbol('noise'),\n  pops: Symbol('pops'),\n  progressiveRock: Symbol('progressiveRock'),\n  ska: Symbol('ska'),\n  symphonicMetal: Symbol('symphonicMetal'),\n}\n","import TokenType from '../../enums/TokenType'\nimport GenreType from '../../enums/GenreType'\nimport ContractData from '../../enums/ContractData'\n\nconst TRUE_VALUE = 'true'\n\nclass TokenModel {\n  constructor() {\n    this.id = null\n    this.owner = null\n    this.creator = null\n    this.inscription = null\n    this.tokenType = null\n    this.genreType = null\n    this.skill = 0\n    this.passion = 0\n    this.looks = 0\n    this.mental = 0\n    this.childTokenTypes = []\n    this.sales = 0\n    this.fun = 0\n    this.act = 0\n    this.isAlreadyDisplay = false\n    this.isAlreadyMixed = false\n    this.networkId = 0\n  }\n\n  static isAlreadyDisplayKey(tokenId, networkId) {\n    return `BandStarAlreadyDisplay_${networkId}_${`0x${tokenId.slice(-64)}`.toLowerCase()}`\n  }\n\n  static isAlreadyMixedKey(tokenId, networkId) {\n    return `BandStarAlreadyMixed_${networkId}_${`0x${tokenId.slice(-64)}`.toLowerCase()}`\n  }\n\n  static isAlreadyMixed(id, networkId) {\n    return window.localStorage.getItem(this.isAlreadyMixedKey(id, networkId)) === TRUE_VALUE\n  }\n\n  static decodeTokenTypeByBandStar(model, inscription) {\n    const i = 6\n    const byte = inscription.substr(-((i + 1) * 2), 2)\n    const keys = Object.keys(TokenType)\n    model.tokenType = TokenType[keys[parseInt(byte, 16) % keys.length] ]\n  }\n\n  static decodeTokenTypeByOther(model, inscription) {\n    const i = 6\n    const byte = inscription.substr(-((i + 1) * 2), 2)\n    const values = [\n      TokenType.jambe,\n      TokenType.dtm,\n      TokenType.violin,\n      TokenType.sax,\n    ]\n    model.tokenType = values[parseInt(byte, 16) % values.length]\n  }\n\n  static decodeForMember(model, inscription) {\n    for (let i = 0; i < 32; i++) {\n      const byte = inscription.substr(-((i + 1) * 2), 2)\n      switch (i) {\n        case 1:\n          model.passion = parseInt(byte, 16)\n          break\n        case 3:\n          model.skill = parseInt(byte, 16)\n          break\n        case 5:\n          model.mental = parseInt(byte, 16)\n          break\n        case 7:\n          model.looks = parseInt(byte, 16)\n          break\n        case 20:\n        {\n          const keys = Object.keys(GenreType)\n          model.genreType = GenreType[keys[parseInt(byte, 16) % keys.length] ]\n        }\n          break\n        default:\n          break\n      }\n    }\n  }\n\n  static decodeForBand(model, inscription) {\n    let childCount = 0\n    for (let i = 0; i < 32; i++) {\n      const byte = inscription.substr(-((i + 1) * 2), 2)\n      switch (i) {\n        case 1:\n          model.passion = parseInt(byte, 16)\n          break\n        case 2:\n          childCount = parseInt(byte, 16) % 6\n          break\n        case 3:\n          model.skill = parseInt(byte, 16)\n          break\n        case 5:\n          model.mental = parseInt(byte, 16)\n          break\n        case 7:\n          model.looks = parseInt(byte, 16)\n          break\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        {\n          const index = i - 10\n          if (index < childCount) {\n            const keys = Object.keys(TokenType)\n            const tokenType = TokenType[keys[parseInt(byte, 16) % keys.length] ]\n            model.childTokenTypes.push(tokenType)\n          }\n        }\n          break\n        case 20:\n        {\n          const keys = Object.keys(GenreType)\n          model.genreType = GenreType[keys[parseInt(byte, 16) % keys.length] ]\n        }\n          break\n        case 21:\n          model.fun += parseInt(byte, 16)\n          break\n        case 22:\n          model.fun += parseInt(byte, 16) * 0x100\n          break\n        case 23:\n          model.fun += parseInt(byte, 16) * 0x10000\n          break\n        case 24:\n          model.fun += parseInt(byte, 16) * 0x1000000\n          break\n        case 25:\n          model.sales += parseInt(byte, 16)\n          break\n        case 26:\n          model.sales += parseInt(byte, 16) * 0x100\n          break\n        case 27:\n          model.sales += parseInt(byte, 16) * 0x10000\n          break\n        case 28:\n          model.sales += parseInt(byte, 16) * 0x1000000\n          break\n        case 29:\n          model.act += parseInt(byte, 16)\n          break\n        case 30:\n          model.act += parseInt(byte, 16) * 0x100\n          break\n        default:\n          break\n      }\n    }\n  }\n\n  static decode(id, owner, creator, inscription, networkId) {\n    // validate\n    if ((id === null)\n      || (id.length === 0)\n      || (owner === null)\n      || (owner.length === 0)\n      || (creator === null)\n      || (creator.length === 0)\n      || (inscription === null)\n      || (inscription.length === 0))\n    {\n      return null\n    }\n\n    const model = new TokenModel()\n    model.id = `0x${id.slice(-64)}`\n    model.owner = owner\n    model.creator = creator\n    model.inscription = `0x${inscription.slice(-64)}`\n    model.networkId = networkId\n\n    if (creator.toLowerCase() === ContractData.BandStar.addresses[networkId].toLowerCase()) {\n      this.decodeTokenTypeByBandStar(model, inscription)\n\n    } else {\n      this.decodeTokenTypeByOther(model, inscription)\n    }\n\n    if (model.tokenType === TokenType.band) {\n      this.decodeForBand(model, inscription)\n      model.isAlreadyMixed = true\n\n    } else {\n      this.decodeForMember(model, inscription)\n      model.isAlreadyMixed = (window.localStorage.getItem(TokenModel.isAlreadyMixedKey(model.id, networkId)) === TRUE_VALUE)\n    }\n\n    model.isAlreadyDisplay = (window.localStorage.getItem(TokenModel.isAlreadyDisplayKey(model.id, networkId)) === TRUE_VALUE)\n\n    return model\n  }\n\n  static mint() {\n    const model = new TokenModel()\n\n    const enableTokenTypes = [\n      TokenType.vocal,\n      TokenType.guitar,\n      TokenType.bass,\n      TokenType.drum,\n      TokenType.keyboard,\n    ]\n    model.tokenType = enableTokenTypes[Math.floor(Math.random() * enableTokenTypes.length)]\n\n    model.skill = Math.floor(Math.random() * 0xff)\n    model.passion = Math.floor(Math.random() * 0xff)\n    model.looks = Math.floor(Math.random() * 0xff)\n    model.mental = Math.floor(Math.random() * 0xff)\n\n    model.sales = Math.floor(Math.random() * 0xffffffff)\n    model.fun = Math.floor(Math.random() * 0xffffffff)\n    model.act = Math.floor(Math.random() * 0xffff)\n\n    const enableGenreTypes = Object.values(GenreType)\n    model.genreType = enableGenreTypes[Math.floor(Math.random() * enableGenreTypes.length)]\n\n    return model\n  }\n\n  static mixedMint(tokenModels) {\n    const model = new TokenModel()\n\n    model.tokenType = TokenType.band\n\n    model.skill = Math.floor(tokenModels.map((model) => model.skill).reduce((next, current) => next + current) / tokenModels.length)\n    model.passion = Math.floor(tokenModels.map((model) => model.passion).reduce((next, current) => next + current) / tokenModels.length)\n    model.looks = Math.floor(tokenModels.map((model) => model.looks).reduce((next, current) => next + current) / tokenModels.length)\n    model.mental = Math.floor(tokenModels.map((model) => model.mental).reduce((next, current) => next + current) / tokenModels.length)\n\n    model.genreType = tokenModels[Math.floor(Math.random() * tokenModels.length) ].genreType\n\n    const uniqueGenres = tokenModels.map((model) => model.genreType).filter((value, index, self) => self.indexOf(value) === index)\n    const genreBonus = tokenModels.length / uniqueGenres.length\n\n    model.sales = Math.floor((\n      (Math.pow(model.skill / 0xff, 3) * 1000000)\n      + (Math.pow(model.passion / 0xff, 3) * 1000000)\n      + (Math.pow(model.looks / 0xff, 3) * 1000000)\n    ) * genreBonus) * tokenModels.length\n\n    model.fun = Math.floor((\n      (Math.pow(model.looks / 0xff, 3) * 1000000)\n      + (Math.pow(model.mental / 0xff, 3) * 1000000)\n    ) * genreBonus) * tokenModels.length\n\n    model.act = Math.floor(Math.pow(model.mental / 0xff, 3) * (365 * 10) * genreBonus)\n\n    model.childTokenTypes = tokenModels.map((model) => model.tokenType)\n\n    return model\n  }\n\n  byteForInscription(index, max) {\n    const mul = Math.floor(0xff / max)\n    return (Math.floor(Math.random() * mul) * max) + index\n  }\n\n  encode() {\n    let inscription = \"\"\n    for (let i = 0; i < 32; i++) {\n      switch (i) {\n        case 1:\n          inscription = (\"00\" + this.passion.toString(16)).slice(-2) + inscription\n          break\n        case 2:\n          // child max is 5, index 0 equal no childs\n          inscription = (\"00\" + this.byteForInscription(this.childTokenTypes.length, 6).toString(16)).slice(-2) + inscription\n          break\n        case 3:\n          inscription = (\"00\" + this.skill.toString(16)).slice(-2) + inscription\n          break\n        case 5:\n          inscription = (\"00\" + this.mental.toString(16)).slice(-2) + inscription\n          break\n        case 6:\n        {\n          const keys = Object.keys(TokenType)\n          const targetKey = keys.filter((key) => { return TokenType[key] === this.tokenType })[0]\n          inscription = (\"00\" + this.byteForInscription(keys.indexOf(targetKey), keys.length).toString(16)).slice(-2) + inscription\n        }\n          break\n        case 7:\n          inscription = (\"00\" + this.looks.toString(16)).slice(-2) + inscription\n          break\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        {\n          const index = i - 10\n          if (index < this.childTokenTypes.length) {\n            const keys = Object.keys(TokenType)\n            const targetKey = keys.filter((key) => { return TokenType[key] === this.childTokenTypes[index] })[0]\n            inscription = (\"00\" + this.byteForInscription(keys.indexOf(targetKey), keys.length).toString(16)).slice(-2) + inscription\n\n          } else {\n            inscription = (\"00\" + Math.floor(Math.random() * 0xff).toString(16)).slice(-2) + inscription\n          }\n        }\n          break\n        case 20:\n        {\n          const keys = Object.keys(GenreType)\n          const targetKey = keys.filter((key) => { return GenreType[key] === this.genreType })[0]\n          inscription = (\"00\" + this.byteForInscription(keys.indexOf(targetKey), keys.length).toString(16)).slice(-2) + inscription\n        }\n          break\n        case 21:\n          inscription = (\"00000000\" + this.fun.toString(16)).substr(-2, 2) + inscription\n          break\n        case 22:\n          inscription = (\"00000000\" + this.fun.toString(16)).substr(-4, 2) + inscription\n          break\n        case 23:\n          inscription = (\"00000000\" + this.fun.toString(16)).substr(-6, 2) + inscription\n          break\n        case 24:\n          inscription = (\"00000000\" + this.fun.toString(16)).substr(-8, 2) + inscription\n          break\n        case 25:\n          inscription = (\"00000000\" + this.sales.toString(16)).substr(-2, 2) + inscription\n          break\n        case 26:\n          inscription = (\"00000000\" + this.sales.toString(16)).substr(-4, 2) + inscription\n          break\n        case 27:\n          inscription = (\"00000000\" + this.sales.toString(16)).substr(-6, 2) + inscription\n          break\n        case 28:\n          inscription = (\"00000000\" + this.sales.toString(16)).substr(-8, 2) + inscription\n          break\n        case 29:\n          inscription = (\"0000\" + this.act.toString(16)).substr(-2, 2) + inscription\n          break\n        case 30:\n          inscription = (\"0000\" + this.act.toString(16)).substr(-4, 2) + inscription\n          break\n        default:\n          inscription = (\"00\" + Math.floor(Math.random() * 0xff).toString(16)).slice(-2) + inscription\n          break\n      }\n    }\n    return `0x${inscription}`\n  }\n\n  alreadyDisplay() {\n    this.isAlreadyDisplay = true\n    window.localStorage.setItem(TokenModel.isAlreadyDisplayKey(this.id, this.networkId), TRUE_VALUE)\n  }\n\n  alreadyMixed() {\n    this.isAlreadyMixed = true\n    window.localStorage.setItem(TokenModel.isAlreadyMixedKey(this.id, this.networkId), TRUE_VALUE)\n  }\n}\n\nexport default TokenModel\n","import React from 'react'\nimport TokenType from '../../enums/TokenType'\nimport imageVocal from '../../assets/img/animal_music_band_singer.png'\nimport imageGuitar from '../../assets/img/animal_music_band_guitar.png'\nimport imageBass from '../../assets/img/animal_music_band_bass.png'\nimport imageDrum from '../../assets/img/animal_music_band_drum.png'\nimport imageKeyboard from '../../assets/img/music_keyboard_woman.png'\nimport imageJambe from '../../assets/img/music_djembe_janbe_jambe_woman.png'\nimport imageDtm from '../../assets/img/dtm_musician.png'\nimport imageViolin from '../../assets/img/musician_violin_usagi.png'\nimport imageSax from '../../assets/img/sax_musician.png'\nimport imageBand from '../../assets/img/animal_music_band.png'\n\nclass TokenIcon extends React.Component {\n  render() {\n    const {tokenModel, ...remainProps} = this.props\n    let src\n    switch (tokenModel.tokenType) {\n      case TokenType.vocal:\n        src = imageVocal\n        break\n      case TokenType.guitar:\n        src = imageGuitar\n        break\n      case TokenType.bass:\n        src = imageBass\n        break\n      case TokenType.drum:\n        src = imageDrum\n        break\n      case TokenType.keyboard:\n        src = imageKeyboard\n        break\n      case TokenType.jambe:\n        src = imageJambe\n        break\n      case TokenType.dtm:\n        src = imageDtm\n        break\n      case TokenType.violin:\n        src = imageViolin\n        break\n      case TokenType.sax:\n        src = imageSax\n        break\n      case TokenType.band:\n        src = imageBand\n        break\n      default:\n        return null\n    }\n    return <img src={src} alt={tokenModel.id} {...remainProps} />\n  }\n}\n\nexport default TokenIcon\n","import React from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport TokenType from '../../enums/TokenType'\n\nclass TokenTypeChip extends React.Component {\n  render() {\n    const {tokenType, ...remainProps} = this.props\n    let label = ''\n    switch (tokenType) {\n      case TokenType.vocal:\n        label = 'Vocal'\n        break\n      case TokenType.guitar:\n        label = 'Guitar'\n        break\n      case TokenType.bass:\n        label = 'Bass'\n        break\n      case TokenType.drum:\n        label = 'Drum'\n        break\n      case TokenType.keyboard:\n        label = 'Keyboard'\n        break\n      case TokenType.jambe:\n        label = 'Jambe'\n        break\n      case TokenType.dtm:\n        label = 'DTM'\n        break\n      case TokenType.violin:\n        label = 'Violin'\n        break\n      case TokenType.sax:\n        label = 'Sax'\n        break\n      case TokenType.band:\n        label = 'Band'\n        break\n      default:\n        return null\n    }\n    return <Chip label={label} color='primary' {...remainProps} />\n  }\n}\n\nexport default TokenTypeChip\n","import React from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport GenreType from '../../enums/GenreType'\n\nclass GenreTypeChip extends React.Component {\n  render() {\n    const {genreType, ...remainProps} = this.props\n    let label = ''\n    switch (genreType) {\n      case GenreType.alternativeRock:\n        label = 'Alternative'\n        break\n      case GenreType.bigBeat:\n        label = 'BigBeat'\n        break\n      case GenreType.digitalHardcore:\n        label = 'DigitalHardcore'\n        break\n      case GenreType.electro:\n        label = 'Electro'\n        break\n      case GenreType.folk:\n        label = 'Folk'\n        break\n      case GenreType.funk:\n        label = 'Funk'\n        break\n      case GenreType.ukGarage:\n        label = 'UK Garage'\n        break\n      case GenreType.gothicRock:\n        label = 'GothicRock'\n        break\n      case GenreType.hardRock:\n        label = 'HardRock'\n        break\n      case GenreType.heavyMetal:\n        label = 'HeavyMetal'\n        break\n      case GenreType.instrumental:\n        label = 'Instrumental'\n        break\n      case GenreType.jazz:\n        label = 'Jazz'\n        break\n      case GenreType.noise:\n        label = 'Noise'\n        break\n      case GenreType.pops:\n        label = 'Pops'\n        break\n      case GenreType.progressiveRock:\n        label = 'Progressive'\n        break\n      case GenreType.ska:\n        label = 'Ska'\n        break\n      case GenreType.symphonicMetal:\n        label = 'SumphonicMetal'\n        break\n      default:\n        return null\n    }\n    return <Chip label={label} color='secondary' {...remainProps} />\n  }\n}\n\nexport default GenreTypeChip\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nexport default () => (\n  <div>\n    Loading...\n    <CircularProgress size={20} />\n  </div>\n)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport NetworkId from '../../enums/NetworkId'\nimport TokenType from '../../enums/TokenType'\nimport TokenModel from '../../models/TokenModel'\nimport TokenIcon from '../../components/TokenIcon'\nimport TokenTypeChip from '../../components/TokenTypeChip'\nimport GenreTypeChip from '../../components/GenreTypeChip'\nimport Loading from '../../components/Loading'\nimport ContractData from '../../enums/ContractData'\n\nconst NumericGauge = (labelName, value) => (\n  <div>\n    <LinearProgress variant='determinate' value={Math.round((value * 100) / 0xff)} style={{display: 'inline-block', verticalAlign: 'middle', width: '150px'}}/> { labelName } : { value }\n  </div>\n)\n\nclass TokenDetail extends React.Component {\n  state = {\n    tokenModel: null,\n    isNotFound: false,\n  }\n\n  salesFormatter = new Intl.NumberFormat('us-EN', {\n    style: 'currency',\n    currency: 'USD'\n  })\n\n  funFormatter = new Intl.NumberFormat('us-EN')\n\n  actFormat = (act) => {\n    if (act < 30) {\n      const day = (act === 1) ? 'day' : 'days'\n      return `${act} ${day}`\n\n    } else if (act < 360) {\n      const monthNum = Math.floor(act / 30)\n      const month = (monthNum === 1) ? 'month' : 'months'\n      const dayNum = act % 30\n      if (dayNum === 0) {\n        return `${monthNum} ${month}`\n\n      } else if (dayNum === 1) {\n        return `${monthNum} ${month}, 1 day`\n\n      } else {\n        return `${monthNum} ${month}, ${dayNum} days`\n      }\n\n    } else {\n      const i = Math.floor(act / 30)\n      const yearNum = Math.floor(i / 12)\n      const year = (yearNum === 1) ? 'year' : 'years'\n      const monthNum = i % 12\n      if (monthNum === 0) {\n        return `${yearNum} ${year}`\n\n      } else if (monthNum === 1) {\n        return `${yearNum} ${year}, 1 month`\n\n      } else {\n        return `${yearNum} ${year}, ${monthNum} months`\n      }\n    }\n  }\n\n  web3HttpUrl = (name) => {\n    switch (name) {\n      case 'kovan':\n        return 'https://kovan.infura.io/ipN7Rvj4j0lzprCXMbql'\n      case 'rinkeby':\n        return 'https://rinkeby.infura.io/ipN7Rvj4j0lzprCXMbql'\n      case 'local':\n        return 'http://localhost:7545'\n      default:\n        return null\n    }\n  }\n\n  handleOtherDappsClick = () => {\n    window.open(`https://drip-samples.github.io/llllll-sample-dragons${this.props.history.location.pathname}`, '_blank')\n  }\n\n  componentDidMount() {\n    const { tokenId, networkName } = this.props.match.params\n    const networkId = NetworkId[networkName]\n    const Web3 = require('web3')\n    const web3 = new Web3(new Web3.providers.HttpProvider(this.web3HttpUrl(networkName)))\n    const { SixPillars } = ContractData\n    const sixPillars = new web3.eth.Contract(SixPillars.abi, SixPillars.addresses[networkId])\n\n    if (Number.isNaN(parseInt(tokenId, 16))) {\n      this.setState({isNotFound: true})\n      return\n    }\n\n    let owner, creator\n    sixPillars.methods.ownerOf(tokenId).call()\n      .then((result) => {\n        owner = result\n        return sixPillars.methods.creator(tokenId).call()\n      })\n      .then((result) => {\n        creator = result\n        return sixPillars.methods.inscription(tokenId).call()\n      })\n      .then((result) => {\n        const bn = new web3.utils.BN(result)\n        const inscription = (\"0000000000000000000000000000000000000000000000000000000000000000\" + bn.toString(16)).slice(-64)\n        const model = TokenModel.decode(tokenId, owner, creator, inscription, networkId)\n        if (model != null) {\n          this.setState({tokenModel: model})\n        } else {\n          this.setState({isNotFound: true})\n        }\n      })\n  }\n\n  render() {\n    const { tokenModel, isNotFound } = this.state\n    return (\n      <div>\n        <h1>Token Detail</h1>\n        <div>{this.props.match.params.tokenId}</div>\n        {\n          (isNotFound === true) ? (\n            <div>token not found</div>\n\n          ) : (tokenModel !== null) ? (\n            <React.Fragment>\n              <div><TokenIcon tokenModel={tokenModel} style={{height: '200px'}} /></div>\n              {\n                (tokenModel.tokenType !== TokenType.band) && tokenModel.isAlreadyMixed && (\n                  <div style={{color: '#ff0000'}}>token is already used.</div>\n                )\n              }\n              <div><TokenTypeChip tokenType={tokenModel.tokenType} /><GenreTypeChip genreType={tokenModel.genreType} /></div>\n              {\n                (tokenModel.tokenType === TokenType.band) && (\n                  <React.Fragment>\n                    <div>\n                      { tokenModel.childTokenTypes.map((tokenType, index) => <TokenTypeChip tokenType={tokenType} key={`childtoken${index}`}/>) }\n                    </div>\n                    <div style={{fontSize: '20px', fontWeight: 'bold'}}>\n                      <div>Sales : {this.salesFormatter.format(tokenModel.sales)}</div>\n                      <div>Fun : {this.funFormatter.format(tokenModel.fun)}</div>\n                      <div>Act : {this.actFormat(tokenModel.act)}</div>\n                    </div>\n                  </React.Fragment>\n                )\n              }\n              { NumericGauge('Skill', tokenModel.skill) }\n              { NumericGauge('Passion', tokenModel.passion) }\n              { NumericGauge('Looks', tokenModel.looks) }\n              { NumericGauge('Mental', tokenModel.mental) }\n              <div style={{marginTop: '30px'}}>\n                <Button variant=\"outlined\" onClick={this.handleOtherDappsClick}>\n                  Dragon\n                </Button>\n              </div>\n            </React.Fragment>\n\n          ) : (\n            <Loading />\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default TokenDetail\n","import React from 'react'\n\nexport default () => (\n  <div>\n    <div>Metamask is connected disable network.</div>\n    <div>enabled is</div>\n    <ul>\n      <li>Ropsten</li>\n      <li>Rinkeby</li>\n      <li>Kovan</li>\n    </ul>\n  </div>\n)\n","import React from 'react'\n\nexport default () => (\n  <div>\n    Metamask Not Found\n  </div>\n)\n","import React from 'react'\nimport Web3Context from '../../contexts/Web3Context'\nimport Web3StatusType from '../../enums/Web3StatusType'\nimport Loading from '../../components/Loading'\nimport MetamaskDisableNetwork from '../../components/MetamaskDisableNetwork'\nimport MetamaskNotFound from '../../components/MetamaskNotFound'\n\nconst ValidateWeb3Injector = (WrappedComponent) => (\n  class extends React.Component {\n    render() {\n      return (\n        <Web3Context.Consumer>\n          {\n            (providerProps) => {\n              switch (providerProps.web3Status) {\n                case Web3StatusType.failed.notfound:\n                  return <MetamaskNotFound />\n                case Web3StatusType.failed.network:\n                  return <MetamaskDisableNetwork />\n                case Web3StatusType.success:\n                  const props = {\n                    ...this.props,\n                    ...providerProps,\n                  }\n                  return <WrappedComponent {...props} />\n                default:\n                  return <Loading />\n              }\n            }\n          }\n        </Web3Context.Consumer>\n      )\n    }\n  }\n)\n\nexport default ValidateWeb3Injector\n","export default {\n  3: 'Ropsten',\n  4: 'Rinkeby',\n  42: 'Kovan',\n  5777: 'Local',\n}\n","import React from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport red from '@material-ui/core/colors/red'\n\nexport default () => (\n  <Chip label='New!' style={{color: red['500'], backgroundColor: red['50']}} />\n)\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport CheckBox from '@material-ui/icons/CheckBox'\nimport CheckBoxOutlineBlank from '@material-ui/icons/CheckBoxOutlineBlank'\nimport teal from '@material-ui/core/colors/teal'\nimport grey from '@material-ui/core/colors/grey'\nimport TokenType from '../../enums/TokenType'\nimport TokenIcon from '../TokenIcon'\nimport TokenTypeChip from '../TokenTypeChip'\nimport GenreTypeChip from '../GenreTypeChip'\nimport NewChip from '../NewChip'\nimport Loading from '../Loading'\n\nconst NumericGauge = (labelName, value) => (\n  <li><LinearProgress variant='determinate' value={Math.round((value * 100) / 0xff)} style={{display: 'inline-block', verticalAlign: 'middle', width: '80px'}}/> { labelName } : { value }</li>\n)\n\nclass TokenCard extends React.Component {\n  handleClick = () => {\n    const {tokenModel, onClick} = this.props\n    onClick(tokenModel)\n  }\n\n  render() {\n    const {tokenModel, isMixedMode, isSelected} = this.props\n    let cardStyle = {\n      width: '100%',\n    }\n    if (isMixedMode) {\n      if (isSelected) {\n        cardStyle.backgroundColor = teal['100']\n\n      } else if (tokenModel.isAlreadyMixed) {\n        cardStyle.backgroundColor = grey['500']\n      }\n\n    } else if (tokenModel && (tokenModel.tokenType !== TokenType.band) && tokenModel.isAlreadyMixed) {\n      cardStyle.backgroundColor = grey['500']\n    }\n    return (\n      <Card onClick={this.handleClick}>\n        <CardActionArea style={cardStyle}>\n          {\n            (tokenModel == null) ? (\n              <CardContent>\n                <div style={{float: 'left', height: '106px', marginBottom: '16px'}}>\n                  <Loading />\n                </div>\n              </CardContent>\n\n            ) : (\n              <CardContent>\n                <div style={{float: 'left', width: '106px', height: '106px', marginBottom: '16px'}}>\n                  <TokenIcon tokenModel={tokenModel} style={{width: 'auto', height: 'auto', maxWidth: '100%', maxHeight: '100%'}} />\n                </div>\n                <div style={{float: 'left'}}>\n                  <ul style={{listStyle: 'none'}}>\n                    <li>\n                      {\n                        !tokenModel.isAlreadyDisplay && (\n                          <NewChip />\n                        )\n                      }\n                      <TokenTypeChip tokenType={tokenModel.tokenType} />\n                      <GenreTypeChip genreType={tokenModel.genreType} />\n                    </li>\n                    { NumericGauge('Skill', tokenModel.skill) }\n                    { NumericGauge('Passion', tokenModel.passion) }\n                    { NumericGauge('Looks', tokenModel.looks) }\n                    { NumericGauge('Mental', tokenModel.mental) }\n                  </ul>\n                </div>\n                {\n                  isMixedMode && !tokenModel.isAlreadyMixed && (\n                    <div style={{float: 'right'}}>\n                      { isSelected ? <CheckBox /> : <CheckBoxOutlineBlank /> }\n                    </div>\n                  )\n                }\n              </CardContent>\n            )\n          }\n        </CardActionArea>\n      </Card>\n    )\n  }\n}\n\nexport default TokenCard\n","import React from 'react'\nimport { withRouter } from 'react-router'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport ValidateWeb3Injector from '../../injectors/ValidateWeb3Injector'\nimport NetworkName from '../../enums/NetworkName'\nimport TokenModel from '../../models/TokenModel'\nimport TokenCard from '../../components/TokenCard'\nimport Loading from '../../components/Loading'\nimport ContractData from '../../enums/ContractData'\n\nconst LIST_ITEM_ONCE = 8\n\nclass MyPage extends React.Component {\n  state = {\n    tokenBalance: null,\n    isLoadingNextToken: false,\n    isCanMore: false,\n    tokenModels: [],\n    isMixedMode: false,\n    selectedTokenIds: [],\n  }\n\n  updateTokenId = (nextIndex, remainCount) => {\n    if (nextIndex < 0) {\n      this.setState({isLoadingNextToken: false})\n      return null\n\n    } else if (remainCount <= 0) {\n      this.setState({isLoadingNextToken: false, isCanMore: true})\n      return null\n    }\n    const { networkId, currentAddress } = this.props\n    const { SixPillars } = ContractData\n    const sixPillars = new this.props.web3.eth.Contract(SixPillars.abi, SixPillars.addresses[networkId])\n    let id, creator\n    sixPillars.methods.tokenOfOwnerByIndex(currentAddress, nextIndex).call({from: currentAddress})\n      .then((result) => {\n        const bn = new this.props.web3.utils.BN(result)\n        id = (\"0000000000000000000000000000000000000000000000000000000000000000\" + bn.toString(16)).slice(-64)\n        return sixPillars.methods.creator(`0x${id}`).call({from: currentAddress})\n      })\n      .then((result) => {\n        creator = result\n        return sixPillars.methods.inscription(`0x${id}`).call({from: currentAddress})\n      })\n      .then((result) => {\n        const bn = new this.props.web3.utils.BN(result)\n        const inscription = (\"0000000000000000000000000000000000000000000000000000000000000000\" + bn.toString(16)).slice(-64)\n        const model = TokenModel.decode(id, currentAddress, creator, inscription, networkId)\n        this.setState({tokenModels: this.state.tokenModels.concat(model)})\n        return this.updateTokenId(nextIndex - 1, remainCount - 1)\n      })\n      .catch((error) => {\n        this.updateTokenId(nextIndex - 1, remainCount)\n      })\n  }\n\n  handleMintClick = () => {\n    const tokenModel = TokenModel.mint()\n    const inscription = tokenModel.encode()\n    this.props.mintToken && this.props.mintToken(inscription)\n  }\n\n  handleTokenClick = (tokenModel) => {\n    const { isMixedMode, selectedTokenIds } = this.state\n    if (isMixedMode) {\n      if (0 <= selectedTokenIds.indexOf(tokenModel.id)) {\n        this.setState({\n          selectedTokenIds: selectedTokenIds.filter((tokenId) => { return tokenId !== tokenModel.id }),\n        })\n\n      } else if ((selectedTokenIds.length < 5) && !tokenModel.isAlreadyMixed) {\n        this.setState({\n          selectedTokenIds: selectedTokenIds.concat(tokenModel.id),\n        })\n      }\n\n    } else {\n      this.props.history.push(`/${NetworkName[tokenModel.networkId].toLowerCase()}/tokens/${tokenModel.id}`)\n    }\n  }\n\n  handleMoreClick = () => {\n    const { tokenBalance, tokenModels } = this.state\n    this.setState({\n      isLoadingNextToken: true,\n      isCanMore: false,\n    })\n    this.updateTokenId(tokenBalance - tokenModels.length - 1, LIST_ITEM_ONCE)\n  }\n\n  handleEditMixedClick = () => {\n    this.setState({\n      isMixedMode: !this.state.isMixedMode,\n      selectedTokenIds: [],\n    })\n  }\n\n  handleSubmitMixedClick = () => {\n    const { tokenModels, selectedTokenIds } = this.state\n    const mixedTokenModels = tokenModels.filter((model) => 0 <= selectedTokenIds.indexOf(model.id))\n    const bandToken = TokenModel.mixedMint(mixedTokenModels)\n    const inscription = bandToken.encode()\n    this.props.mintToken && this.props.mintToken(inscription, () => {\n      mixedTokenModels.forEach((tokenModel) => { tokenModel.alreadyMixed() })\n    })\n  }\n\n  componentDidMount() {\n    const { networkId, currentAddress } = this.props\n    const { SixPillars } = ContractData\n    const sixPillars = new this.props.web3.eth.Contract(SixPillars.abi, SixPillars.addresses[networkId])\n    sixPillars.methods.balanceOf(currentAddress).call({from: currentAddress})\n      .then((result) => {\n        const balance = parseInt(result)\n        this.setState({\n          tokenBalance: balance,\n          isLoadingNextToken: true,\n        })\n        this.updateTokenId(balance - 1, LIST_ITEM_ONCE)\n      })\n  }\n\n  render() {\n    const { tokenBalance, isLoadingNextToken, isCanMore, tokenModels, isMixedMode, selectedTokenIds } = this.state\n    const displayCount = isLoadingNextToken ? tokenModels.length + 1 : tokenModels.length\n    return (\n      <div>\n        <h1>My Page</h1>\n        <Grid container>\n          <Grid item xs={12} md={4} lg={3} key='mint'>\n            <Button variant=\"outlined\" onClick={this.handleMintClick}>\n              Create BandStar Token\n            </Button>\n          </Grid>\n          <Grid item xs={12} md={4} lg={3} key='editmixed'>\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleEditMixedClick}>\n              { isMixedMode ? 'Cancel Bund Edit' : 'Start Bund Edit' }\n            </Button>\n          </Grid>\n          {\n            isMixedMode && (2 <= selectedTokenIds.length) && (\n              <Grid item xs={12} md={4} lg={3} key='submitmixed'>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={this.handleSubmitMixedClick}>\n                  Submit Band\n                </Button>\n              </Grid>\n            )\n          }\n        </Grid>\n        {\n          (tokenBalance == null) ? (\n            <Loading />\n\n          ) : (0 < displayCount) ? (\n            <Grid container>\n              {\n                Array(displayCount).fill(0).map((_, i) => {\n                  if (i < tokenModels.length) {\n                    return (\n                      <Grid item xs={12} md={6} lg={4} key={i}>\n                        <TokenCard tokenModel={tokenModels[i]} isMixedMode={isMixedMode} isSelected={0 <= selectedTokenIds.indexOf(tokenModels[i].id)} onClick={this.handleTokenClick} />\n                      </Grid>\n                    )\n\n                  } else {\n                    return (\n                      <Grid item xs={12} md={6} lg={4} key={i}>\n                        <TokenCard />\n                      </Grid>\n                    )\n                  }\n                })\n              }\n              {\n                isCanMore && (\n                  <Grid item xs={12} md={6} lg={4} key={displayCount}>\n                    <Card onClick={this.handleMoreClick}>\n                      <CardActionArea style={{width: '100%'}}>\n                        <CardContent>\n                          <div style={{height: '106px', padding: '16px'}}>\n                            { 'More...' }\n                          </div>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grid>\n                )\n              }\n            </Grid>\n\n          ) : (\n            <p>{\"you don't have token.\"}</p>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ValidateWeb3Injector(MyPage))\n","import React from 'react'\nimport Web3Context from '../../contexts/Web3Context'\n\nconst Web3Injector = (WrappedComponent) => (\n  class extends React.Component {\n    render() {\n      return (\n        <Web3Context.Consumer>\n          {\n            (providerProps) => {\n              const props = {\n                ...this.props,\n                ...providerProps,\n              }\n              return <WrappedComponent {...props} />\n            }\n          }\n        </Web3Context.Consumer>\n      )\n    }\n  }\n)\n\nexport default Web3Injector\n","import React from 'react'\nimport { withRouter } from 'react-router'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Web3Injector from '../../injectors/Web3Injector'\nimport Web3TransactionType from '../../enums/Web3TransactionType'\nimport NetworkName from '../../enums/NetworkName'\n\nclass Header extends React.Component {\n  state = {\n    isProgress: false,\n    isOpen: false,\n    snackMessage: null,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { web3Transaction } = this.props\n    if (web3Transaction !== prevProps.web3Transaction) {\n      switch (web3Transaction) {\n        case Web3TransactionType.pending:\n          this.setState({\n            isProgress: true,\n            isOpen: false,\n          })\n          break\n        case Web3TransactionType.success:\n          this.setState({\n            isProgress: false,\n            isOpen: true,\n            snackMessage: \"success!\",\n          })\n          setTimeout(() => {\n            window.location.reload()\n          }, 1500)\n          break\n        case Web3TransactionType.cancel:\n          this.setState({\n            isProgress: false,\n            isOpen: true,\n            snackMessage: \"cancel transaction.\",\n          })\n          break\n        default:\n          this.setState({\n            isProgress: false,\n            isOpen: false,\n          })\n          break\n      }\n    }\n  }\n\n  handleSnackClose = () => {\n    this.setState({\n      isOpen: false,\n    })\n  }\n\n  handleLogoClick = () => {\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { networkId } = this.props\n    const { isProgress, isOpen, snackMessage } = this.state\n    return (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h4\" color=\"inherit\" style={{flexGrow: 1}} onClick={this.handleLogoClick}>\n            BandStar\n          </Typography>\n          {\n            isProgress && <CircularProgress color=\"secondary\" size={30} />\n          }\n          {\n            networkId && NetworkName[networkId] && (\n              <Typography variant=\"h6\" color=\"inherit\">\n                {NetworkName[networkId]}\n              </Typography>\n            )\n          }\n        </Toolbar>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={isOpen}\n          autoHideDuration={3000}\n          onClose={this.handleSnackClose}\n          message={snackMessage}\n        />\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Web3Injector(Header))\n","import React from 'react'\nimport { withRouter } from 'react-router'\nimport grey from '@material-ui/core/colors/grey'\nimport logo from '../../assets/img/poweredby6p.png'\n\nconst FOOTER_HEIGHT = 80\n\nclass Footer extends React.Component {\n  state = {\n    value: 0\n  }\n\n  static height() {\n    return FOOTER_HEIGHT\n  }\n\n  handleChange = (event, value) => {\n    this.setState({value})\n  }\n\n  rootStyle = {\n    width: '100%',\n    height: `${FOOTER_HEIGHT}px`,\n    position: 'absolute',\n    bottom: '0px',\n    backgroundColor: grey['100'],\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n\n  render() {\n    return (\n      <div style={this.rootStyle}>\n        <div style={{padding: '10px', textAlign: 'center'}}>\n          <div>\n            <a href='https://6-pillars.ooo/' alt='|||||| 6 pillars' target='_blank' rel=\"noopener noreferrer\">\n              <img src={logo} alt='powered by |||||| 6 pillars' style={{height: '24px', marginBottom: '4px'}}/>\n            </a>\n          </div>\n          <div>\n            <a href='https://github.com/drip-samples/llllll-sample-bandstar' alt='sample codes' target='_blank' rel=\"noopener noreferrer\">\n              <i className=\"fab fa-github fa-lg\" style={{color: '#000000'}}></i>\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Footer)\n","import React from 'react'\n\nexport default () => (\n  <div>\n    404 Not Found\n  </div>\n)\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport './App.css'\nimport Web3Provider from './providers/Web3Provider'\nimport GithubPagesRedirectProvider from './providers/GithubPagesRedirectProvider'\nimport TokenDetail from './views/TokenDetail'\nimport MyPage from './views/MyPage'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport NotFound from './components/NotFound'\n\nclass App extends Component {\n  render() {\n    return (\n      <Web3Provider>\n        <BrowserRouter basename={'/llllll-sample-bandstar'}>\n          <GithubPagesRedirectProvider>\n            <React.Fragment>\n              <Header />\n              <div style={{paddingBottom: `${Footer.height()}px`}}>\n                <Switch>\n                  <Route exact path=\"/:networkName/tokens/:tokenId\" component={TokenDetail} />\n                  <Route exact path=\"/\" component={MyPage} />\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n              <Footer />\n            </React.Fragment>\n          </GithubPagesRedirectProvider>\n        </BrowserRouter>\n      </Web3Provider>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}